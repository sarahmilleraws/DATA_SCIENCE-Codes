{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "plt.rcParams[\"figure.figsize\"] = (9,5)\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"car_dataset.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Car_Name</th>\n",
       "      <th>Year</th>\n",
       "      <th>Selling_Price</th>\n",
       "      <th>Present_Price</th>\n",
       "      <th>Kms_Driven</th>\n",
       "      <th>Fuel_Type</th>\n",
       "      <th>Seller_Type</th>\n",
       "      <th>Transmission</th>\n",
       "      <th>Owner</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ritz</td>\n",
       "      <td>2014</td>\n",
       "      <td>3.35</td>\n",
       "      <td>5.59</td>\n",
       "      <td>27000</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>sx4</td>\n",
       "      <td>2013</td>\n",
       "      <td>4.75</td>\n",
       "      <td>9.54</td>\n",
       "      <td>43000</td>\n",
       "      <td>Diesel</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ciaz</td>\n",
       "      <td>2017</td>\n",
       "      <td>7.25</td>\n",
       "      <td>9.85</td>\n",
       "      <td>6900</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>wagon r</td>\n",
       "      <td>2011</td>\n",
       "      <td>2.85</td>\n",
       "      <td>4.15</td>\n",
       "      <td>5200</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>swift</td>\n",
       "      <td>2014</td>\n",
       "      <td>4.60</td>\n",
       "      <td>6.87</td>\n",
       "      <td>42450</td>\n",
       "      <td>Diesel</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Car_Name  Year  Selling_Price  Present_Price  Kms_Driven Fuel_Type  \\\n",
       "0     ritz  2014           3.35           5.59       27000    Petrol   \n",
       "1      sx4  2013           4.75           9.54       43000    Diesel   \n",
       "2     ciaz  2017           7.25           9.85        6900    Petrol   \n",
       "3  wagon r  2011           2.85           4.15        5200    Petrol   \n",
       "4    swift  2014           4.60           6.87       42450    Diesel   \n",
       "\n",
       "  Seller_Type Transmission  Owner  \n",
       "0      Dealer       Manual      0  \n",
       "1      Dealer       Manual      0  \n",
       "2      Dealer       Manual      0  \n",
       "3      Dealer       Manual      0  \n",
       "4      Dealer       Manual      0  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(301, 9)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 301 entries, 0 to 300\n",
      "Data columns (total 9 columns):\n",
      " #   Column         Non-Null Count  Dtype  \n",
      "---  ------         --------------  -----  \n",
      " 0   Car_Name       301 non-null    object \n",
      " 1   Year           301 non-null    int64  \n",
      " 2   Selling_Price  301 non-null    float64\n",
      " 3   Present_Price  301 non-null    float64\n",
      " 4   Kms_Driven     301 non-null    int64  \n",
      " 5   Fuel_Type      301 non-null    object \n",
      " 6   Seller_Type    301 non-null    object \n",
      " 7   Transmission   301 non-null    object \n",
      " 8   Owner          301 non-null    int64  \n",
      "dtypes: float64(2), int64(3), object(4)\n",
      "memory usage: 21.3+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Car_Name         False\n",
       "Year             False\n",
       "Selling_Price    False\n",
       "Present_Price    False\n",
       "Kms_Driven       False\n",
       "Fuel_Type        False\n",
       "Seller_Type      False\n",
       "Transmission     False\n",
       "Owner            False\n",
       "dtype: bool"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().any()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Year</th>\n",
       "      <td>301.0</td>\n",
       "      <td>2013.627907</td>\n",
       "      <td>2.891554</td>\n",
       "      <td>2003.00</td>\n",
       "      <td>2012.0</td>\n",
       "      <td>2014.0</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>2018.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Selling_Price</th>\n",
       "      <td>301.0</td>\n",
       "      <td>4.661296</td>\n",
       "      <td>5.082812</td>\n",
       "      <td>0.10</td>\n",
       "      <td>0.9</td>\n",
       "      <td>3.6</td>\n",
       "      <td>6.0</td>\n",
       "      <td>35.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Present_Price</th>\n",
       "      <td>301.0</td>\n",
       "      <td>7.628472</td>\n",
       "      <td>8.644115</td>\n",
       "      <td>0.32</td>\n",
       "      <td>1.2</td>\n",
       "      <td>6.4</td>\n",
       "      <td>9.9</td>\n",
       "      <td>92.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kms_Driven</th>\n",
       "      <td>301.0</td>\n",
       "      <td>36947.205980</td>\n",
       "      <td>38886.883882</td>\n",
       "      <td>500.00</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>32000.0</td>\n",
       "      <td>48767.0</td>\n",
       "      <td>500000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Owner</th>\n",
       "      <td>301.0</td>\n",
       "      <td>0.043189</td>\n",
       "      <td>0.247915</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               count          mean           std      min      25%      50%  \\\n",
       "Year           301.0   2013.627907      2.891554  2003.00   2012.0   2014.0   \n",
       "Selling_Price  301.0      4.661296      5.082812     0.10      0.9      3.6   \n",
       "Present_Price  301.0      7.628472      8.644115     0.32      1.2      6.4   \n",
       "Kms_Driven     301.0  36947.205980  38886.883882   500.00  15000.0  32000.0   \n",
       "Owner          301.0      0.043189      0.247915     0.00      0.0      0.0   \n",
       "\n",
       "                   75%       max  \n",
       "Year            2016.0    2018.0  \n",
       "Selling_Price      6.0      35.0  \n",
       "Present_Price      9.9      92.6  \n",
       "Kms_Driven     48767.0  500000.0  \n",
       "Owner              0.0       3.0  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 648x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 648x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 648x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 648x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 648x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAiwAAAE+CAYAAACugUvkAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8vihELAAAACXBIWXMAAAsTAAALEwEAmpwYAAAXlklEQVR4nO3df7BfdX3n8eeLBFCLqyAXlgJpQKMVnN1ArqyCWKgUaacFcUDCWAuVMbgLbVm7zoo64naWbWcraldFjcqCLkJQRLFlBUoFhxaEBCMQAQUMEMgkAToiVakJ7/3je7J+udybXC58v9/PDc/HzJ17vu/zOee8L5NLXvmcX6kqJEmSWrbdqBuQJEnaGgOLJElqnoFFkiQ1z8AiSZKaZ2CRJEnNM7BIkqTmzR11A8/GrrvuWvPnzx91G5Ik6TmyYsWKh6tqbGJ9VgeW+fPns3z58lG3IUmSniNJ7pus7ikhSZLUvIEFliR7J/l2kjuSrEryZ119lyRXJ/lR933nvm3OTHJ3kruSvHlQvUmSpNllkDMsG4E/r6pXA68DTkuyH/A+4JqqWgBc032mW7cY2B84Cjg3yZwB9idJkmaJgQWWqlpbVbd0yz8F7gD2BI4BLuiGXQC8pVs+Bri4qp6oqh8DdwMHDao/SZI0ewzlGpYk84EDgO8Cu1fVWuiFGmC3btiewAN9m63pahP3tSTJ8iTLN2zYMNC+JUlSGwYeWJLsBFwKnFFVj21p6CS1p71KuqqWVtV4VY2PjT3tridJkrQNGmhgSbI9vbByYVV9rSuvS7JHt34PYH1XXwPs3bf5XsBDg+xPkiTNDoO8SyjAF4A7quqjfasuB07qlk8CvtFXX5xkxyT7AAuAmwbVnyRJmj0G+eC4Q4B3ALclWdnV3g/8FXBJklOA+4HjAapqVZJLgB/Qu8PotKraNMD+JEnSLDGwwFJV1zP5dSkAb5pim7OBswfVkyRJmp180q0kSWrerH6X0CDtufc8HlrzwNYHShq4X99rbx584P5RtyFphAwsU3hozQOc8Nl/GnUbkoBlpx486hYkjZinhCRJUvMMLJIkqXkGFkmS1DwDiyRJap6BRZIkNc/AIkmSmmdgkSRJzTOwSJKk5hlYJElS8wwskiSpeQYWSZLUPAOLJElqnoFFkiQ1z8AiSZKaZ2CRJEnNM7BIkqTmGVgkSVLzDCySJKl5BhZJktQ8A4skSWqegUWSJDVvYIElyXlJ1ie5va+2LMnK7mt1kpVdfX6Sn/et+8yg+pIkSbPP3AHu+3zgk8AXNxeq6oTNy0nOAX7SN/6eqlo4wH4kSdIsNbDAUlXfSTJ/snVJArwN+O1BHV+SJG07RnUNy6HAuqr6UV9tnyTfS3JdkkNH1JckSWrQIE8JbcmJwEV9n9cC86rqkSSLgK8n2b+qHpu4YZIlwBKAefPmDaVZSZI0WkOfYUkyF3grsGxzraqeqKpHuuUVwD3AKyfbvqqWVtV4VY2PjY0No2VJkjRiozgldARwZ1Wt2VxIMpZkTre8L7AAuHcEvUmSpAYN8rbmi4AbgFclWZPklG7VYp56OgjgjcCtSb4PfBV4d1U9OqjeJEnS7DLIu4ROnKJ+8iS1S4FLB9WLJEma3XzSrSRJap6BRZIkNc/AIkmSmmdgkSRJzTOwSJKk5hlYJElS8wwskiSpeQYWSZLUPAOLJElqnoFFkiQ1z8AiSZKaZ2CRJEnNM7BIkqTmGVgkSVLzDCySJKl5BhZJktQ8A4skSWqegUWSJDXPwCJJkppnYJEkSc0zsEiSpOYZWCRJUvMMLJIkqXkGFkmS1LyBBZYk5yVZn+T2vtqHkzyYZGX39Xt9685McneSu5K8eVB9SZKk2WeQMyznA0dNUv9YVS3svq4ASLIfsBjYv9vm3CRzBtibJEmaRQYWWKrqO8Cj0xx+DHBxVT1RVT8G7gYOGlRvkiRpdhnFNSynJ7m1O2W0c1fbE3igb8yariZJkjT0wPJp4OXAQmAtcE5XzyRja7IdJFmSZHmS5Rs2bBhIk5IkqS1DDSxVta6qNlXVk8Dn+NVpnzXA3n1D9wIemmIfS6tqvKrGx8bGBtuwJElqwlADS5I9+j4eC2y+g+hyYHGSHZPsAywAbhpmb5IkqV1zB7XjJBcBhwG7JlkDnAUclmQhvdM9q4FTAapqVZJLgB8AG4HTqmrToHqTJEmzy8ACS1WdOEn5C1sYfzZw9qD6kSRJs5dPupUkSc0zsEiSpOYZWCRJUvMMLJIkqXkGFkmS1DwDiyRJap6BRZIkNc/AIkmSmmdgkSRJzTOwSJKk5hlYJElS8wwskiSpeQYWSZLUPAOLJElqnoFFkiQ1z8AiSZKaZ2CRJEnNM7BIkqTmGVgkSVLzDCySJKl5BhZJktQ8A4skSWqegUWSJDXPwCJJkpo3sMCS5Lwk65Pc3lf76yR3Jrk1yWVJXtrV5yf5eZKV3ddnBtWXJEmafQY5w3I+cNSE2tXAa6rq3wE/BM7sW3dPVS3svt49wL4kSdIsM7DAUlXfAR6dULuqqjZ2H28E9hrU8SVJ0rZjlNewvBP4v32f90nyvSTXJTl0VE1JkqT2zB3FQZN8ANgIXNiV1gLzquqRJIuAryfZv6oem2TbJcASgHnz5g2rZUmSNEJDn2FJchLw+8Dbq6oAquqJqnqkW14B3AO8crLtq2ppVY1X1fjY2Niw2pYkSSM01MCS5CjgvwJHV9XP+upjSeZ0y/sCC4B7h9mbJElq18BOCSW5CDgM2DXJGuAsencF7QhcnQTgxu6OoDcCf5FkI7AJeHdVPTrpjiVJ0vPOwAJLVZ04SfkLU4y9FLh0UL1IkqTZzSfdSpKk5hlYJElS8wwskiSpeQYWSZLUPAOLJElqnoFFkiQ1z8AiSZKaZ2CRJEnNM7BIkqTmGVgkSVLzDCySJKl5BhZJktS8aQWWJIdMpyZJkjQI051h+cQ0a5IkSc+5uVtameT1wMHAWJL39K36N8CcQTYmSZK02RYDC7ADsFM37sV99ceA4wbVlCRJUr8tBpaqug64Lsn5VXXfkHqSJEl6iq3NsGy2Y5KlwPz+barqtwfRlCRJUr/pBpavAJ8BPg9sGlw7kiRJTzfdwLKxqj490E4kSZKmMN3A8s0k/wm4DHhic7GqHh1IV5LUb7u5JBl1F5I6v77X3jz4wP1DPeZ0A8tJ3ff39tUK2Pe5bUeSJvHkRk747D+NugtJnWWnHjz0Y04rsFTVPoNuRJIkaSrTCixJ/miyelV98bltR5Ik6emm+2j+1/Z9HQp8GDh6SxskOS/J+iS399V2SXJ1kh9133fuW3dmkruT3JXkzc/4J5EkSdusaQWWqvqTvq93AQfQewrulpwPHDWh9j7gmqpaAFzTfSbJfsBiYP9um3OT+Oh/SZIETH+GZaKfAQu2NKCqvgNMvIvoGOCCbvkC4C199Yur6omq+jFwN3DQDHuTJEnbmOlew/JNencFQe+lh68GLpnB8XavqrUAVbU2yW5dfU/gxr5xa7qaJEnStG9r/kjf8kbgvqpa8xz2MdkDFmqSGkmWAEsA5s2b9xy2IEmSWjXda1iuA+6k98bmnYF/neHx1iXZA6D7vr6rrwH27hu3F/DQFL0srarxqhofGxubYRuSJGk2mVZgSfI24CbgeOBtwHeTHDeD413Orx5CdxLwjb764iQ7JtmH3vUxN81g/5IkaRs03VNCHwBeW1XrAZKMAX8PfHWqDZJcBBwG7JpkDXAW8FfAJUlOAe6nF4CoqlVJLgF+QO+U02lV5UsWJUkSMP3Ast3msNJ5hK3MzlTViVOsetMU488Gzp5mP5Ik6XlkuoHlW0muBC7qPp8AXDGYliRJkp5qi4ElySvo3Yr83iRvBd5A746eG4ALh9CfJEnSVi+6/TjwU4Cq+lpVvaeq/jO92ZWPD7Y1SZKknq0FlvlVdevEYlUtB+YPpCNJkqQJthZYXrCFdS98LhuRJEmaytYCy81J3jWx2N2WvGIwLUmSJD3V1u4SOgO4LMnb+VVAGaf3puZjB9iXJEnS/7fFwFJV64CDkxwOvKYr/11V/cPAO5MkSepM6zksVfVt4NsD7kWSJGlS03qXkCRJ0igZWCRJUvMMLJIkqXkGFkmS1DwDiyRJap6BRZIkNc/AIkmSmmdgkSRJzTOwSJKk5hlYJElS8wwskiSpeQYWSZLUPAOLJElqnoFFkiQ1z8AiSZKaN3fYB0zyKmBZX2lf4EPAS4F3ARu6+vur6orhdidJklo09MBSVXcBCwGSzAEeBC4D/hj4WFV9ZNg9SZKkto36lNCbgHuq6r4R9yFJkho26sCyGLio7/PpSW5Ncl6SnUfVlCRJasvIAkuSHYCjga90pU8DL6d3umgtcM4U2y1JsjzJ8g0bNkw2RJIkbWNGOcPyu8AtVbUOoKrWVdWmqnoS+Bxw0GQbVdXSqhqvqvGxsbEhtitJkkZllIHlRPpOByXZo2/dscDtQ+9IkiQ1aeh3CQEkeRHwO8CpfeX/mWQhUMDqCeskSdLz2EgCS1X9DHjZhNo7RtGLJElq36jvEpIkSdoqA4skSWqegUWSJDXPwCJJkppnYJEkSc0zsEiSpOYZWCRJUvMMLJIkqXkGFkmS1DwDiyRJap6BRZIkNc/AIkmSmmdgkSRJzTOwSJKk5hlYJElS8wwskiSpeQYWSZLUPAOLJElqnoFFkiQ1z8AiSZKaZ2CRJEnNM7BIkqTmGVgkSVLzDCySJKl5BhZJktS8uaM4aJLVwE+BTcDGqhpPsguwDJgPrAbeVlX/PIr+JElSW0Y5w3J4VS2sqvHu8/uAa6pqAXBN91mSJKmpU0LHABd0yxcAbxldK5IkqSWjCiwFXJVkRZIlXW33qloL0H3fbUS9SZKkxozkGhbgkKp6KMluwNVJ7pzuhl3AWQIwb968QfUnSZIaMpIZlqp6qPu+HrgMOAhYl2QPgO77+im2XVpV41U1PjY2NqyWJUnSCA09sCT5tSQv3rwMHAncDlwOnNQNOwn4xrB7kyRJbRrFKaHdgcuSbD7+l6vqW0luBi5JcgpwP3D8CHqTJEkNGnpgqap7gX8/Sf0R4E3D7keSJLWvpduaJUmSJmVgkSRJzTOwSJKk5hlYJElS8wwskiSpeQYWSZLUPAOLJElqnoFFkiQ1z8AiSZKaZ2CRJEnNM7BIkqTmGVgkSVLzDCySJKl5BhZJktQ8A4skSWqegUWSJDXPwCJJkppnYJEkSc0zsEiSpOYZWCRJUvMMLJIkqXkGFkmS1DwDiyRJap6BRZIkNW/ogSXJ3km+neSOJKuS/FlX/3CSB5Os7L5+b9i9SZKkNs0dwTE3An9eVbckeTGwIsnV3bqPVdVHRtCTJElq2NADS1WtBdZ2yz9Ncgew57D7kCRJs8dIr2FJMh84APhuVzo9ya1Jzkuy8+g6kyRJLRlZYEmyE3ApcEZVPQZ8Gng5sJDeDMw5U2y3JMnyJMs3bNgwrHYlSdIIjSSwJNmeXli5sKq+BlBV66pqU1U9CXwOOGiybatqaVWNV9X42NjY8JqWJEkjM4q7hAJ8Abijqj7aV9+jb9ixwO3D7k2SJLVpFHcJHQK8A7gtycqu9n7gxCQLgQJWA6eOoDdJktSgUdwldD2QSVZdMexeJEnS7OCTbiVJUvMMLJIkqXkGFkmS1DwDiyRJap6BRZIkNc/AIkmSmmdgkSRJzTOwSJKk5hlYJElS8wwskiSpeQYWSZLUPAOLJElqnoFFkiQ1z8AiSZKaZ2CRJEnNM7BIkqTmGVgkSVLzDCySJKl5BhZJktQ8A4skSWqegUWSJDXPwCJJkppnYJEkSc0zsEiSpOY1F1iSHJXkriR3J3nfqPuRJEmj11RgSTIH+BTwu8B+wIlJ9httV5IkadSaCizAQcDdVXVvVf0rcDFwzIh7kiRJI9ZaYNkTeKDv85quJkmSnsfmjrqBCTJJrZ4yIFkCLOk+Pp7krkE1s+zUgwe1aw3PrsDDo25Cz56/j9sMfye3Eclkf2U/J35jsmJrgWUNsHff572Ah/oHVNVSYOkwm9LslWR5VY2Pug9JPf5OaqZaOyV0M7AgyT5JdgAWA5ePuCdJkjRiTc2wVNXGJKcDVwJzgPOqatWI25IkSSPWVGABqKorgCtG3Ye2GZ4+lNri76RmJFW19VGSJEkj1No1LJIkSU9jYFHzkmxKsjLJqiTfT/KeJDP+s5vk8eeyP2lb8kx/P5IcluRvu+Wjt/ZKlSR/keSILe1nJpKsTrLrTLdX+5q7hkWaxM+raiFAkt2ALwMvAc4a9IHTe9BAqurJQR9Lmu2q6nK2cmdnVX1oSO1oG+MMi2aVqlpP78GBp6dnTpK/TnJzkluTnAqQZKck1yS5JcltSSZ9xUOS9/Zt+9+62vwkdyQ5F7iFpz4bSHpe6GY8rk3y1SR3JrmwC/CbX1J7Z5Lrgbf2bXNykk8meUk347FdV39RkgeSbJ/k/CTHbWU/H07yX/o+355kfrf89SQruhnXzQ8R1fOAgUWzTlXdS+/P7m7AKcBPquq1wGuBdyXZB/gFcGxVHQgcDpyz+X+2myU5ElhA7x1WC4FFSd7YrX4V8MWqOqCq7hvCjyW16ADgDHovo90XOCTJC4DPAX8AHAr824kbVdVPgO8Dv9WV/gC4sqp+uXnMdPYzhXdW1SJgHPjTJC975j+WZiMDi2arzeHjSOCPkqwEvgu8jF4ICfA/ktwK/D29d1LtPmEfR3Zf36M3k/Kb3bYA91XVjYP8AaRZ4KaqWtOdEl0JzKf3e/LjqvpR9W4z/T9TbLsMOKFbXtx97jfd/Uz0p0m+D9xIb/ZzwVbGaxvhNSyadZLsC2wC1tMLJn9SVVdOGHMyMAYsqqpfJlkNvGDiroC/rKrPTth2PvAvA2leml2e6FvexK/+zpjO8zAuB/4yyS7AIuAfJhkz1X428tR/UL8AeqepgCOA11fVz5Jcy9N/r7WNcoZFs0qSMeAzwCe7f5VdCfzHJNt361+Z5NfoXZS7vgsrhzP5y7SuBN6ZZKdu2z27i3olTe1OYJ8kL+8+nzjZoKp6HLgJ+Bvgb6tq0zPYz2rgQIAkBwL7dPWXAP/chZXfBF73LH8WzSLOsGg2eGF3ymd7ev/y+hLw0W7d5+lNU9/SXaOyAXgLcCHwzSTL6U1l3zlxp1V1VZJXAzd0l7c8DvwhvX9JSppEVf2iu9j175I8DFwPvGaK4cuArwCHPcP9XMqvTvXeDPywq38LeHd3qvcueqeF9Dzhk24lSVLzPCUkSZKaZ2CRJEnNM7BIkqTmGVgkSVLzDCySJKl5BhZJktQ8A4ukGUvyge4ldLcmWZnkP2xhbP9L765NMv4sj/2p7pg/SPLzbnnl5mNI2rb44DhJM5Lk9cDvAwdW1RNJdgV2GNCx5kx8UmpVndatm0/vSaoLB3FsSW1whkXSTO0BPFxVTwBU1cNV9VCSRUmuS7IiyZVJ9tjSTpIcmeSGJLck+UrfqxJWJ/lQkuuB46fTUJIvJTmm7/OFSY5OcnKSbyT5VpK7kpzVN+YPk9zUzc58NsmcmfzHkDRYBhZJM3UVsHeSHyY5N8lvde90+gRwXFUtAs4Dzp5qB92szAeBI6rqQGA58J6+Ib+oqjdU1cXT7OnzwB93+34JcDBwRbfuIODtwELg+CTj3asZTgAO6WZoNnVjJDXGU0KSZqSqHk+yCDgUOJzee2P+O733wVzdvZ9pDrB2C7t5HbAf8I/d+B2AG/rWL3uGPV3XXduyG/BW4NKq2tjt++qqegQgydeAN9B7N9Ui4OZuzAvpvQVcUmMMLJJmrLuu5Frg2iS3AacBq6rq9dPcRegFiUnf+Av8ywza+hK9WZLFwDv7250wrrrjX1BVZ87gOJKGyFNCkmYkyauSLOgrLQTuAMa6C3JJsn2S/bewmxuBQ5K8ohv/oiSvfJatnQ+cAVBVq/rqv5NklyQvpPdG738ErgGO62Zk6Nb/xrM8vqQBcIZF0kztBHwiyUvpnVq5G1gCLAX+V3cNyVzg48CqyXZQVRuSnAxclGTHrvxB4Iczbaqq1iW5A/j6hFXX05t9eQXw5apaDpDkg8BVSbYDfklvlui+mR5f0mCkauIsqSTNXkleBNxG73brn3S1k4Hxqjp9lL1JmjlPCUnaZiQ5ArgT+MTmsCJp2+AMi6TmJfkUcMiE8t9U1f8eRT+Shs/AIkmSmucpIUmS1DwDiyRJap6BRZIkNc/AIkmSmmdgkSRJzft/YWiknLLuU+wAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 648x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 648x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 648x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "for i, col in enumerate(df.columns):\n",
    "    plt.figure(i)\n",
    "    sns.histplot(df[col])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(df.corr(), annot=True)\n",
    "plt.show();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Feature Engineering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 301 entries, 0 to 300\n",
      "Data columns (total 9 columns):\n",
      " #   Column         Non-Null Count  Dtype  \n",
      "---  ------         --------------  -----  \n",
      " 0   Car_Name       301 non-null    object \n",
      " 1   Year           301 non-null    int64  \n",
      " 2   Selling_Price  301 non-null    float64\n",
      " 3   Present_Price  301 non-null    float64\n",
      " 4   Kms_Driven     301 non-null    int64  \n",
      " 5   Fuel_Type      301 non-null    object \n",
      " 6   Seller_Type    301 non-null    object \n",
      " 7   Transmission   301 non-null    object \n",
      " 8   Owner          301 non-null    int64  \n",
      "dtypes: float64(2), int64(3), object(4)\n",
      "memory usage: 21.3+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Car_Name</th>\n",
       "      <th>Year</th>\n",
       "      <th>Selling_Price</th>\n",
       "      <th>Present_Price</th>\n",
       "      <th>Kms_Driven</th>\n",
       "      <th>Fuel_Type</th>\n",
       "      <th>Seller_Type</th>\n",
       "      <th>Transmission</th>\n",
       "      <th>Owner</th>\n",
       "      <th>vehicle_age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ritz</td>\n",
       "      <td>2014</td>\n",
       "      <td>3.35</td>\n",
       "      <td>5.59</td>\n",
       "      <td>27000</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>sx4</td>\n",
       "      <td>2013</td>\n",
       "      <td>4.75</td>\n",
       "      <td>9.54</td>\n",
       "      <td>43000</td>\n",
       "      <td>Diesel</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ciaz</td>\n",
       "      <td>2017</td>\n",
       "      <td>7.25</td>\n",
       "      <td>9.85</td>\n",
       "      <td>6900</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>wagon r</td>\n",
       "      <td>2011</td>\n",
       "      <td>2.85</td>\n",
       "      <td>4.15</td>\n",
       "      <td>5200</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>swift</td>\n",
       "      <td>2014</td>\n",
       "      <td>4.60</td>\n",
       "      <td>6.87</td>\n",
       "      <td>42450</td>\n",
       "      <td>Diesel</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Car_Name  Year  Selling_Price  Present_Price  Kms_Driven Fuel_Type  \\\n",
       "0     ritz  2014           3.35           5.59       27000    Petrol   \n",
       "1      sx4  2013           4.75           9.54       43000    Diesel   \n",
       "2     ciaz  2017           7.25           9.85        6900    Petrol   \n",
       "3  wagon r  2011           2.85           4.15        5200    Petrol   \n",
       "4    swift  2014           4.60           6.87       42450    Diesel   \n",
       "\n",
       "  Seller_Type Transmission  Owner  vehicle_age  \n",
       "0      Dealer       Manual      0            7  \n",
       "1      Dealer       Manual      0            8  \n",
       "2      Dealer       Manual      0            4  \n",
       "3      Dealer       Manual      0           10  \n",
       "4      Dealer       Manual      0            7  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"vehicle_age\"] = 2021 - df.Year\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=[\"Car_Name\", \"Year\"], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.get_dummies(df, columns = [\"Fuel_Type\", \"Seller_Type\", \"Transmission\"], drop_first = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Features and Target Variable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df.drop(\"Selling_Price\", axis = 1)\n",
    "y = df.Selling_Price"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Splitting data into training and testing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train features shape :  (240, 8)\n",
      "Train target shape   :  (240,)\n",
      "Test features shape  :  (61, 8)\n",
      "Test target shape    :  (61,)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.2, random_state = 5)\n",
    "\n",
    "print(\"Train features shape : \", X_train.shape)\n",
    "print(\"Train target shape   : \", y_train.shape)\n",
    "print(\"Test features shape  : \", X_test.shape)\n",
    "print(\"Test target shape    : \", y_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Model Building"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression(normalize=True)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "model = LinearRegression(normalize=True)\n",
    "model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Interpret the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 4.45257970e-01, -1.87067298e-05, -8.13577578e-01, -3.19047765e-01,\n",
       "        2.61924627e+00,  6.06486867e-01, -1.22016745e+00, -1.00868282e+00])"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.coef_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4.604429051576997"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.intercept_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model intercept  :  4.604429051576997 \n",
      "\n",
      "Present_Price :  0.44525796989762884\n",
      "Kms_Driven :  -1.8706729757021762e-05\n",
      "Owner :  -0.813577577658668\n",
      "vehicle_age :  -0.3190477645588868\n",
      "Fuel_Type_Diesel :  2.6192462729450865\n",
      "Fuel_Type_Petrol :  0.6064868667913283\n",
      "Seller_Type_Individual :  -1.2201674460429655\n",
      "Transmission_Manual :  -1.0086828216162673\n"
     ]
    }
   ],
   "source": [
    "print(\"Model intercept  : \", model.intercept_, \"\\n\")\n",
    "for i in range(len(X.columns)):\n",
    "   print(X.columns[i], \": \", model.coef_[i])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>coefficient</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Present_Price</th>\n",
       "      <td>0.445258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kms_Driven</th>\n",
       "      <td>-0.000019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Owner</th>\n",
       "      <td>-0.813578</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vehicle_age</th>\n",
       "      <td>-0.319048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fuel_Type_Diesel</th>\n",
       "      <td>2.619246</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fuel_Type_Petrol</th>\n",
       "      <td>0.606487</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Seller_Type_Individual</th>\n",
       "      <td>-1.220167</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Transmission_Manual</th>\n",
       "      <td>-1.008683</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        coefficient\n",
       "Present_Price              0.445258\n",
       "Kms_Driven                -0.000019\n",
       "Owner                     -0.813578\n",
       "vehicle_age               -0.319048\n",
       "Fuel_Type_Diesel           2.619246\n",
       "Fuel_Type_Petrol           0.606487\n",
       "Seller_Type_Individual    -1.220167\n",
       "Transmission_Manual       -1.008683"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "coeff_df = pd.DataFrame(model.coef_, X.columns, columns=[\"coefficient\"])\n",
    "coeff_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Model Evaluation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = model.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([10.70729552, 10.87520713,  4.43096899,  5.91337788,  2.54941855,\n",
       "        9.03674575,  7.2737809 ,  1.49360032, 16.02286635,  4.74188631,\n",
       "        6.7140433 ,  6.40320371,  3.4644454 ,  3.4148824 , -0.60954639,\n",
       "        4.17855023,  9.09429896, -0.30209302,  9.1878139 ,  1.18733586,\n",
       "        7.5000935 , 18.19046601, 19.54269265,  0.21434982,  2.15321632,\n",
       "        4.76671337,  4.95716413,  6.82822836,  5.23694236,  5.48340774,\n",
       "        4.36427226,  7.93602233,  5.74539229, -0.54343788,  0.66628503,\n",
       "        7.00623246,  7.3790224 ,  5.4235689 ,  1.17465734,  1.16263268,\n",
       "        2.06339611,  5.1531104 , 14.03667284, -9.2787032 ,  1.39494051,\n",
       "        3.97812269, -0.91681301,  8.44163201,  4.34565296,  4.84278586,\n",
       "        5.18366168, 16.39104119,  0.85271469,  1.65187499,  1.6335204 ,\n",
       "       -1.42292807,  2.85945813,  0.66521417, -1.75047375,  1.6120861 ,\n",
       "        0.6862596 ])"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "rmse = (np.sqrt(mean_squared_error(y_test, y_pred)))\n",
    "mae = mean_absolute_error(y_test, y_pred)\n",
    "R2_score = r2_score(y_test, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model testing performance:\n",
      "--------------------------\n",
      "RMSE is 1.9460540138874811\n",
      "MAE is 1.181176915707681\n",
      "R2 score is 0.8589039971923136\n"
     ]
    }
   ],
   "source": [
    "print(\"Model testing performance:\")\n",
    "print(\"--------------------------\")\n",
    "print(\"RMSE is {}\".format(rmse))\n",
    "print(\"MAE is {}\".format(mae))\n",
    "print(\"R2 score is {}\".format(R2_score))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "## RMSE 2'ye yakın bir rakam, df.transform değerlerine baktığımızda modelin çok iyi tahminlme yapmadığını söyleyebiliriz.\n",
    "## R2 yüksek olmalı, mae ve rmse yüksek olmasını isteriz. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from yellowbrick.regressor import PredictionError\n",
    "# Instantiate the linear model and visualizer\n",
    "lm= LinearRegression(normalize=True)\n",
    "visualizer = PredictionError(model)\n",
    "visualizer.fit(X_train, y_train)  # Fit the training data to the visualizer\n",
    "visualizer.score(X_test, y_test)  # Evaluate the model on the test data\n",
    "visualizer.show();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "## outlier'lardan kaynaklı olarak modelimiz tam olarak açıklayamıyor. ve linear regresyon çizgimiz olması gerekenden birz farklı çıkıyor."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Actual</th>\n",
       "      <th>Predicted</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>9.25</td>\n",
       "      <td>10.707296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>9.65</td>\n",
       "      <td>10.875207</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>266</th>\n",
       "      <td>3.65</td>\n",
       "      <td>4.430969</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>222</th>\n",
       "      <td>6.00</td>\n",
       "      <td>5.913378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>2.90</td>\n",
       "      <td>2.549419</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>282</th>\n",
       "      <td>8.25</td>\n",
       "      <td>9.036746</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>279</th>\n",
       "      <td>6.25</td>\n",
       "      <td>7.273781</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138</th>\n",
       "      <td>0.60</td>\n",
       "      <td>1.493600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>14.90</td>\n",
       "      <td>16.022866</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234</th>\n",
       "      <td>5.50</td>\n",
       "      <td>4.741886</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>5.50</td>\n",
       "      <td>6.714043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>265</th>\n",
       "      <td>6.50</td>\n",
       "      <td>6.403204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>3.45</td>\n",
       "      <td>3.464445</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>3.49</td>\n",
       "      <td>3.414882</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>163</th>\n",
       "      <td>0.45</td>\n",
       "      <td>-0.609546</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>220</th>\n",
       "      <td>3.50</td>\n",
       "      <td>4.178550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>7.05</td>\n",
       "      <td>9.094299</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176</th>\n",
       "      <td>0.35</td>\n",
       "      <td>-0.302093</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>6.95</td>\n",
       "      <td>9.187814</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>0.40</td>\n",
       "      <td>1.187336</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>3.80</td>\n",
       "      <td>7.500093</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>23.00</td>\n",
       "      <td>18.190466</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>18.75</td>\n",
       "      <td>19.542693</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>1.00</td>\n",
       "      <td>0.214350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>1.95</td>\n",
       "      <td>2.153216</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Actual  Predicted\n",
       "67     9.25  10.707296\n",
       "99     9.65  10.875207\n",
       "266    3.65   4.430969\n",
       "222    6.00   5.913378\n",
       "24     2.90   2.549419\n",
       "282    8.25   9.036746\n",
       "279    6.25   7.273781\n",
       "138    0.60   1.493600\n",
       "50    14.90  16.022866\n",
       "234    5.50   4.741886\n",
       "43     5.50   6.714043\n",
       "265    6.50   6.403204\n",
       "88     3.45   3.464445\n",
       "84     3.49   3.414882\n",
       "163    0.45  -0.609546\n",
       "220    3.50   4.178550\n",
       "98     7.05   9.094299\n",
       "176    0.35  -0.302093\n",
       "60     6.95   9.187814\n",
       "171    0.40   1.187336\n",
       "90     3.80   7.500093\n",
       "93    23.00  18.190466\n",
       "62    18.75  19.542693\n",
       "123    1.00   0.214350\n",
       "42     1.95   2.153216"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "results = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})\n",
    "result_sample = results.head(25)\n",
    "result_sample"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x648 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "result_sample.plot(kind = 'bar', figsize = (15,9))\n",
    "plt.grid(linestyle = ':', linewidth = '0.5', color = 'green')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Present_Price</th>\n",
       "      <th>Kms_Driven</th>\n",
       "      <th>Owner</th>\n",
       "      <th>vehicle_age</th>\n",
       "      <th>Fuel_Type_Diesel</th>\n",
       "      <th>Fuel_Type_Petrol</th>\n",
       "      <th>Seller_Type_Individual</th>\n",
       "      <th>Transmission_Manual</th>\n",
       "      <th>predicted</th>\n",
       "      <th>actual</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>20.450</td>\n",
       "      <td>59000</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>10.707296</td>\n",
       "      <td>9.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>20.450</td>\n",
       "      <td>50024</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>10.875207</td>\n",
       "      <td>9.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>266</th>\n",
       "      <td>7.000</td>\n",
       "      <td>35000</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.430969</td>\n",
       "      <td>3.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>222</th>\n",
       "      <td>7.600</td>\n",
       "      <td>77632</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5.913378</td>\n",
       "      <td>6.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>4.410</td>\n",
       "      <td>56879</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2.549419</td>\n",
       "      <td>2.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>4.990</td>\n",
       "      <td>20000</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2.859458</td>\n",
       "      <td>3.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>0.480</td>\n",
       "      <td>50000</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.665214</td>\n",
       "      <td>0.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>194</th>\n",
       "      <td>0.787</td>\n",
       "      <td>50000</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1.750474</td>\n",
       "      <td>0.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>0.800</td>\n",
       "      <td>7000</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.612086</td>\n",
       "      <td>0.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>0.826</td>\n",
       "      <td>23000</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.686260</td>\n",
       "      <td>0.45</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>61 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Present_Price  Kms_Driven  Owner  vehicle_age  Fuel_Type_Diesel  \\\n",
       "67          20.450       59000      0           11                 1   \n",
       "99          20.450       50024      0           11                 1   \n",
       "266          7.000       35000      0            7                 0   \n",
       "222          7.600       77632      0            7                 1   \n",
       "24           4.410       56879      0            8                 0   \n",
       "..             ...         ...    ...          ...               ...   \n",
       "25           4.990       20000      0           10                 0   \n",
       "181          0.480       50000      0            5                 0   \n",
       "194          0.787       50000      0           13                 0   \n",
       "127          0.800        7000      0            5                 0   \n",
       "161          0.826       23000      0            7                 0   \n",
       "\n",
       "     Fuel_Type_Petrol  Seller_Type_Individual  Transmission_Manual  predicted  \\\n",
       "67                  0                       0                    1  10.707296   \n",
       "99                  0                       0                    1  10.875207   \n",
       "266                 1                       0                    1   4.430969   \n",
       "222                 0                       0                    1   5.913378   \n",
       "24                  1                       0                    1   2.549419   \n",
       "..                ...                     ...                  ...        ...   \n",
       "25                  1                       0                    1   2.859458   \n",
       "181                 1                       1                    1   0.665214   \n",
       "194                 1                       1                    1  -1.750474   \n",
       "127                 1                       1                    1   1.612086   \n",
       "161                 1                       1                    1   0.686260   \n",
       "\n",
       "     actual  \n",
       "67     9.25  \n",
       "99     9.65  \n",
       "266    3.65  \n",
       "222    6.00  \n",
       "24     2.90  \n",
       "..      ...  \n",
       "25     3.00  \n",
       "181    0.30  \n",
       "194    0.20  \n",
       "127    0.75  \n",
       "161    0.45  \n",
       "\n",
       "[61 rows x 10 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_test[\"predicted\"] = y_pred\n",
    "X_test[\"actual\"] = y_test\n",
    "X_test"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Save The Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "pickle.dump(model, open(\"linear_model\", \"wb\"))  #modelimizi kaydediyor."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "lab = pickle.load(open(\"linear_model\", \"rb\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression(normalize=True)"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lab"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression(normalize=True)"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
