{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 324,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 325,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\SARAH\\anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py:3146: DtypeWarning: Columns (8,16) have mixed types.Specify dtype option on import or set low_memory=False.\n",
      "  has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\n"
     ]
    }
   ],
   "source": [
    "ri = pd.read_csv(\"police.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 326,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>state</th>\n",
       "      <th>stop_date</th>\n",
       "      <th>stop_time</th>\n",
       "      <th>location_raw</th>\n",
       "      <th>county_name</th>\n",
       "      <th>county_fips</th>\n",
       "      <th>fine_grained_location</th>\n",
       "      <th>police_department</th>\n",
       "      <th>driver_gender</th>\n",
       "      <th>...</th>\n",
       "      <th>search_conducted</th>\n",
       "      <th>search_type_raw</th>\n",
       "      <th>search_type</th>\n",
       "      <th>contraband_found</th>\n",
       "      <th>stop_outcome</th>\n",
       "      <th>is_arrested</th>\n",
       "      <th>stop_duration</th>\n",
       "      <th>out_of_state</th>\n",
       "      <th>drugs_related_stop</th>\n",
       "      <th>district</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>RI-2005-00001</td>\n",
       "      <td>RI</td>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>01:55</td>\n",
       "      <td>Zone K1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>600</td>\n",
       "      <td>M</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>RI-2005-00002</td>\n",
       "      <td>RI</td>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>20:30</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>16-30 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>RI-2005-00003</td>\n",
       "      <td>RI</td>\n",
       "      <td>2005-01-04</td>\n",
       "      <td>11:30</td>\n",
       "      <td>Zone X1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>RI-2005-00004</td>\n",
       "      <td>RI</td>\n",
       "      <td>2005-01-04</td>\n",
       "      <td>12:55</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>RI-2005-00005</td>\n",
       "      <td>RI</td>\n",
       "      <td>2005-01-06</td>\n",
       "      <td>01:30</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              id state   stop_date stop_time location_raw  county_name  \\\n",
       "0  RI-2005-00001    RI  2005-01-02     01:55      Zone K1          NaN   \n",
       "1  RI-2005-00002    RI  2005-01-02     20:30      Zone X4          NaN   \n",
       "2  RI-2005-00003    RI  2005-01-04     11:30      Zone X1          NaN   \n",
       "3  RI-2005-00004    RI  2005-01-04     12:55      Zone X4          NaN   \n",
       "4  RI-2005-00005    RI  2005-01-06     01:30      Zone X4          NaN   \n",
       "\n",
       "   county_fips  fine_grained_location police_department driver_gender  ...  \\\n",
       "0          NaN                    NaN               600             M  ...   \n",
       "1          NaN                    NaN               500             M  ...   \n",
       "2          NaN                    NaN                 0           NaN  ...   \n",
       "3          NaN                    NaN               500             M  ...   \n",
       "4          NaN                    NaN               500             M  ...   \n",
       "\n",
       "   search_conducted  search_type_raw search_type contraband_found  \\\n",
       "0             False              NaN         NaN            False   \n",
       "1             False              NaN         NaN            False   \n",
       "2             False              NaN         NaN            False   \n",
       "3             False              NaN         NaN            False   \n",
       "4             False              NaN         NaN            False   \n",
       "\n",
       "  stop_outcome is_arrested stop_duration out_of_state drugs_related_stop  \\\n",
       "0     Citation       False      0-15 Min        False              False   \n",
       "1     Citation       False     16-30 Min        False              False   \n",
       "2          NaN         NaN           NaN          NaN              False   \n",
       "3     Citation       False      0-15 Min        False              False   \n",
       "4     Citation       False      0-15 Min        False              False   \n",
       "\n",
       "   district  \n",
       "0   Zone K1  \n",
       "1   Zone X4  \n",
       "2   Zone X1  \n",
       "3   Zone X4  \n",
       "4   Zone X4  \n",
       "\n",
       "[5 rows x 26 columns]"
      ]
     },
     "execution_count": 326,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 327,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 509681 entries, 0 to 509680\n",
      "Data columns (total 26 columns):\n",
      " #   Column                 Non-Null Count   Dtype  \n",
      "---  ------                 --------------   -----  \n",
      " 0   id                     509681 non-null  object \n",
      " 1   state                  509681 non-null  object \n",
      " 2   stop_date              509671 non-null  object \n",
      " 3   stop_time              509671 non-null  object \n",
      " 4   location_raw           509681 non-null  object \n",
      " 5   county_name            0 non-null       float64\n",
      " 6   county_fips            0 non-null       float64\n",
      " 7   fine_grained_location  0 non-null       float64\n",
      " 8   police_department      509671 non-null  object \n",
      " 9   driver_gender          480584 non-null  object \n",
      " 10  driver_age_raw         480632 non-null  float64\n",
      " 11  driver_age             478986 non-null  float64\n",
      " 12  driver_race_raw        480608 non-null  object \n",
      " 13  driver_race            480608 non-null  object \n",
      " 14  violation_raw          480608 non-null  object \n",
      " 15  violation              480608 non-null  object \n",
      " 16  search_conducted       509671 non-null  object \n",
      " 17  search_type_raw        17762 non-null   object \n",
      " 18  search_type            17762 non-null   object \n",
      " 19  contraband_found       509681 non-null  bool   \n",
      " 20  stop_outcome           480608 non-null  object \n",
      " 21  is_arrested            480608 non-null  object \n",
      " 22  stop_duration          480608 non-null  object \n",
      " 23  out_of_state           479800 non-null  object \n",
      " 24  drugs_related_stop     509681 non-null  bool   \n",
      " 25  district               509681 non-null  object \n",
      "dtypes: bool(2), float64(5), object(19)\n",
      "memory usage: 94.3+ MB\n"
     ]
    }
   ],
   "source": [
    "ri.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 328,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                            0\n",
       "state                         0\n",
       "stop_date                    10\n",
       "stop_time                    10\n",
       "location_raw                  0\n",
       "county_name              509681\n",
       "county_fips              509681\n",
       "fine_grained_location    509681\n",
       "police_department            10\n",
       "driver_gender             29097\n",
       "driver_age_raw            29049\n",
       "driver_age                30695\n",
       "driver_race_raw           29073\n",
       "driver_race               29073\n",
       "violation_raw             29073\n",
       "violation                 29073\n",
       "search_conducted             10\n",
       "search_type_raw          491919\n",
       "search_type              491919\n",
       "contraband_found              0\n",
       "stop_outcome              29073\n",
       "is_arrested               29073\n",
       "stop_duration             29073\n",
       "out_of_state              29881\n",
       "drugs_related_stop            0\n",
       "district                      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 328,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.isnull().sum()  #county_name, county_fips, fine_grained_location verileri bulunmadÄ±ÄŸÄ± iÃ§in silinmelidir."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 329,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(509681, 26)"
      ]
     },
     "execution_count": 329,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 330,
   "metadata": {},
   "outputs": [],
   "source": [
    "ri.drop(\"county_name\", axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 331,
   "metadata": {},
   "outputs": [],
   "source": [
    "ri.drop(\"county_fips\", axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 332,
   "metadata": {},
   "outputs": [],
   "source": [
    "ri.drop(\"fine_grained_location\", axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 333,
   "metadata": {},
   "outputs": [],
   "source": [
    "ri.drop(\"state\", axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 334,
   "metadata": {},
   "outputs": [],
   "source": [
    "ri.drop(\"id\", axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 335,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>stop_date</th>\n",
       "      <th>stop_time</th>\n",
       "      <th>location_raw</th>\n",
       "      <th>police_department</th>\n",
       "      <th>driver_gender</th>\n",
       "      <th>driver_age_raw</th>\n",
       "      <th>driver_age</th>\n",
       "      <th>driver_race_raw</th>\n",
       "      <th>driver_race</th>\n",
       "      <th>violation_raw</th>\n",
       "      <th>...</th>\n",
       "      <th>search_conducted</th>\n",
       "      <th>search_type_raw</th>\n",
       "      <th>search_type</th>\n",
       "      <th>contraband_found</th>\n",
       "      <th>stop_outcome</th>\n",
       "      <th>is_arrested</th>\n",
       "      <th>stop_duration</th>\n",
       "      <th>out_of_state</th>\n",
       "      <th>drugs_related_stop</th>\n",
       "      <th>district</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>01:55</td>\n",
       "      <td>Zone K1</td>\n",
       "      <td>600</td>\n",
       "      <td>M</td>\n",
       "      <td>1985.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>20:30</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1987.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>16-30 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2005-01-04</td>\n",
       "      <td>11:30</td>\n",
       "      <td>Zone X1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2005-01-04</td>\n",
       "      <td>12:55</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1986.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Equipment/Inspection Violation</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2005-01-06</td>\n",
       "      <td>01:30</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1978.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>B</td>\n",
       "      <td>Black</td>\n",
       "      <td>Equipment/Inspection Violation</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    stop_date stop_time location_raw police_department driver_gender  \\\n",
       "0  2005-01-02     01:55      Zone K1               600             M   \n",
       "1  2005-01-02     20:30      Zone X4               500             M   \n",
       "2  2005-01-04     11:30      Zone X1                 0           NaN   \n",
       "3  2005-01-04     12:55      Zone X4               500             M   \n",
       "4  2005-01-06     01:30      Zone X4               500             M   \n",
       "\n",
       "   driver_age_raw  driver_age driver_race_raw driver_race  \\\n",
       "0          1985.0        20.0               W       White   \n",
       "1          1987.0        18.0               W       White   \n",
       "2             NaN         NaN             NaN         NaN   \n",
       "3          1986.0        19.0               W       White   \n",
       "4          1978.0        27.0               B       Black   \n",
       "\n",
       "                    violation_raw  ... search_conducted search_type_raw  \\\n",
       "0                        Speeding  ...            False             NaN   \n",
       "1                        Speeding  ...            False             NaN   \n",
       "2                             NaN  ...            False             NaN   \n",
       "3  Equipment/Inspection Violation  ...            False             NaN   \n",
       "4  Equipment/Inspection Violation  ...            False             NaN   \n",
       "\n",
       "  search_type contraband_found  stop_outcome is_arrested stop_duration  \\\n",
       "0         NaN            False      Citation       False      0-15 Min   \n",
       "1         NaN            False      Citation       False     16-30 Min   \n",
       "2         NaN            False           NaN         NaN           NaN   \n",
       "3         NaN            False      Citation       False      0-15 Min   \n",
       "4         NaN            False      Citation       False      0-15 Min   \n",
       "\n",
       "  out_of_state drugs_related_stop  district  \n",
       "0        False              False   Zone K1  \n",
       "1        False              False   Zone X4  \n",
       "2          NaN              False   Zone X1  \n",
       "3        False              False   Zone X4  \n",
       "4        False              False   Zone X4  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 335,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 336,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(509681, 21)"
      ]
     },
     "execution_count": 336,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.shape "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 341,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "stop_date                 10\n",
       "stop_time                 10\n",
       "location_raw               0\n",
       "police_department         10\n",
       "driver_gender          29097\n",
       "driver_age_raw         29049\n",
       "driver_age             30695\n",
       "driver_race_raw        29073\n",
       "driver_race            29073\n",
       "violation_raw          29073\n",
       "violation              29073\n",
       "search_conducted          10\n",
       "search_type_raw       491919\n",
       "search_type           491919\n",
       "contraband_found           0\n",
       "stop_outcome           29073\n",
       "is_arrested            29073\n",
       "stop_duration          29073\n",
       "out_of_state           29881\n",
       "drugs_related_stop         0\n",
       "district                   0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 341,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 342,
   "metadata": {},
   "outputs": [],
   "source": [
    "ri.dropna(subset=[\"driver_gender\"], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 343,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "stop_date                  0\n",
       "stop_time                  0\n",
       "location_raw               0\n",
       "police_department          0\n",
       "driver_gender              0\n",
       "driver_age_raw             1\n",
       "driver_age              1638\n",
       "driver_race_raw            0\n",
       "driver_race                0\n",
       "violation_raw              0\n",
       "violation                  0\n",
       "search_conducted           0\n",
       "search_type_raw       462822\n",
       "search_type           462822\n",
       "contraband_found           0\n",
       "stop_outcome               0\n",
       "is_arrested                0\n",
       "stop_duration              0\n",
       "out_of_state             808\n",
       "drugs_related_stop         0\n",
       "district                   0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 343,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 344,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(480584, 21)"
      ]
     },
     "execution_count": 344,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 345,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "stop_date              object\n",
       "stop_time              object\n",
       "location_raw           object\n",
       "police_department      object\n",
       "driver_gender          object\n",
       "driver_age_raw        float64\n",
       "driver_age            float64\n",
       "driver_race_raw        object\n",
       "driver_race            object\n",
       "violation_raw          object\n",
       "violation              object\n",
       "search_conducted       object\n",
       "search_type_raw        object\n",
       "search_type            object\n",
       "contraband_found         bool\n",
       "stop_outcome           object\n",
       "is_arrested            object\n",
       "stop_duration          object\n",
       "out_of_state           object\n",
       "drugs_related_stop       bool\n",
       "district               object\n",
       "dtype: object"
      ]
     },
     "execution_count": 345,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0         False\n",
       "1         False\n",
       "2           NaN\n",
       "3         False\n",
       "4         False\n",
       "          ...  \n",
       "509676      NaN\n",
       "509677      NaN\n",
       "509678      NaN\n",
       "509679      NaN\n",
       "509680      NaN\n",
       "Name: is_arrested, Length: 509681, dtype: object"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri[\"is_arrested\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "29073"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri[\"is_arrested\"].isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 346,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('O')"
      ]
     },
     "execution_count": 346,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri[\"is_arrested\"].dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 352,
   "metadata": {},
   "outputs": [],
   "source": [
    "ri[\"is_arrested\"] = ri.is_arrested.astype(bool)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 353,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('bool')"
      ]
     },
     "execution_count": 353,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.is_arrested.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 354,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>stop_date</th>\n",
       "      <th>stop_time</th>\n",
       "      <th>location_raw</th>\n",
       "      <th>police_department</th>\n",
       "      <th>driver_gender</th>\n",
       "      <th>driver_age_raw</th>\n",
       "      <th>driver_age</th>\n",
       "      <th>driver_race_raw</th>\n",
       "      <th>driver_race</th>\n",
       "      <th>violation_raw</th>\n",
       "      <th>...</th>\n",
       "      <th>search_conducted</th>\n",
       "      <th>search_type_raw</th>\n",
       "      <th>search_type</th>\n",
       "      <th>contraband_found</th>\n",
       "      <th>stop_outcome</th>\n",
       "      <th>is_arrested</th>\n",
       "      <th>stop_duration</th>\n",
       "      <th>out_of_state</th>\n",
       "      <th>drugs_related_stop</th>\n",
       "      <th>district</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>01:55</td>\n",
       "      <td>Zone K1</td>\n",
       "      <td>600</td>\n",
       "      <td>M</td>\n",
       "      <td>1985.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>20:30</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1987.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>16-30 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2005-01-04</td>\n",
       "      <td>12:55</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1986.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Equipment/Inspection Violation</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2005-01-06</td>\n",
       "      <td>01:30</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1978.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>B</td>\n",
       "      <td>Black</td>\n",
       "      <td>Equipment/Inspection Violation</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2005-01-12</td>\n",
       "      <td>08:05</td>\n",
       "      <td>Zone X1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>1973.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>B</td>\n",
       "      <td>Black</td>\n",
       "      <td>Call for Service</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>30+ Min</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    stop_date stop_time location_raw police_department driver_gender  \\\n",
       "0  2005-01-02     01:55      Zone K1               600             M   \n",
       "1  2005-01-02     20:30      Zone X4               500             M   \n",
       "3  2005-01-04     12:55      Zone X4               500             M   \n",
       "4  2005-01-06     01:30      Zone X4               500             M   \n",
       "5  2005-01-12     08:05      Zone X1                 0             M   \n",
       "\n",
       "   driver_age_raw  driver_age driver_race_raw driver_race  \\\n",
       "0          1985.0        20.0               W       White   \n",
       "1          1987.0        18.0               W       White   \n",
       "3          1986.0        19.0               W       White   \n",
       "4          1978.0        27.0               B       Black   \n",
       "5          1973.0        32.0               B       Black   \n",
       "\n",
       "                    violation_raw  ... search_conducted search_type_raw  \\\n",
       "0                        Speeding  ...            False             NaN   \n",
       "1                        Speeding  ...            False             NaN   \n",
       "3  Equipment/Inspection Violation  ...            False             NaN   \n",
       "4  Equipment/Inspection Violation  ...            False             NaN   \n",
       "5                Call for Service  ...            False             NaN   \n",
       "\n",
       "  search_type contraband_found  stop_outcome is_arrested  stop_duration  \\\n",
       "0         NaN            False      Citation       False       0-15 Min   \n",
       "1         NaN            False      Citation       False      16-30 Min   \n",
       "3         NaN            False      Citation       False       0-15 Min   \n",
       "4         NaN            False      Citation       False       0-15 Min   \n",
       "5         NaN            False      Citation       False        30+ Min   \n",
       "\n",
       "  out_of_state drugs_related_stop  district  \n",
       "0        False              False   Zone K1  \n",
       "1        False              False   Zone X4  \n",
       "3        False              False   Zone X4  \n",
       "4        False              False   Zone X4  \n",
       "5         True              False   Zone X1  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 354,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 363,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "stop_date   stop_time\n",
       "2005-01-02  01:55        1\n",
       "            20:30        1\n",
       "2005-01-04  12:55        1\n",
       "2005-01-06  01:30        1\n",
       "2005-01-12  08:05        1\n",
       "                        ..\n",
       "2015-12-31  22:46        1\n",
       "            22:47        1\n",
       "            23:08        1\n",
       "            23:44        1\n",
       "            23:48        1\n",
       "Name: stop_time, Length: 424851, dtype: int64"
      ]
     },
     "execution_count": 363,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.groupby(\"stop_date\")[\"stop_time\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 364,
   "metadata": {},
   "outputs": [],
   "source": [
    "#ri[\"stop_datetime\"] = ri[\"stop_date\"] + \" \" + ri[\"stop_time\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 365,
   "metadata": {},
   "outputs": [],
   "source": [
    "#ri[\"stop_datetime\"].dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 366,
   "metadata": {},
   "outputs": [],
   "source": [
    "combined = ri.stop_date.str.cat(ri.stop_time, sep = ' ')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 367,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>stop_date</th>\n",
       "      <th>stop_time</th>\n",
       "      <th>location_raw</th>\n",
       "      <th>police_department</th>\n",
       "      <th>driver_gender</th>\n",
       "      <th>driver_age_raw</th>\n",
       "      <th>driver_age</th>\n",
       "      <th>driver_race_raw</th>\n",
       "      <th>driver_race</th>\n",
       "      <th>violation_raw</th>\n",
       "      <th>...</th>\n",
       "      <th>search_type_raw</th>\n",
       "      <th>search_type</th>\n",
       "      <th>contraband_found</th>\n",
       "      <th>stop_outcome</th>\n",
       "      <th>is_arrested</th>\n",
       "      <th>stop_duration</th>\n",
       "      <th>out_of_state</th>\n",
       "      <th>drugs_related_stop</th>\n",
       "      <th>district</th>\n",
       "      <th>stop_datetime</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>01:55</td>\n",
       "      <td>Zone K1</td>\n",
       "      <td>600</td>\n",
       "      <td>M</td>\n",
       "      <td>1985.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K1</td>\n",
       "      <td>2005-01-02 01:55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>20:30</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1987.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>16-30 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>2005-01-02 20:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2005-01-04</td>\n",
       "      <td>12:55</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1986.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Equipment/Inspection Violation</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>2005-01-04 12:55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2005-01-06</td>\n",
       "      <td>01:30</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1978.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>B</td>\n",
       "      <td>Black</td>\n",
       "      <td>Equipment/Inspection Violation</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>2005-01-06 01:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2005-01-12</td>\n",
       "      <td>08:05</td>\n",
       "      <td>Zone X1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>1973.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>B</td>\n",
       "      <td>Black</td>\n",
       "      <td>Call for Service</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>30+ Min</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X1</td>\n",
       "      <td>2005-01-12 08:05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    stop_date stop_time location_raw police_department driver_gender  \\\n",
       "0  2005-01-02     01:55      Zone K1               600             M   \n",
       "1  2005-01-02     20:30      Zone X4               500             M   \n",
       "3  2005-01-04     12:55      Zone X4               500             M   \n",
       "4  2005-01-06     01:30      Zone X4               500             M   \n",
       "5  2005-01-12     08:05      Zone X1                 0             M   \n",
       "\n",
       "   driver_age_raw  driver_age driver_race_raw driver_race  \\\n",
       "0          1985.0        20.0               W       White   \n",
       "1          1987.0        18.0               W       White   \n",
       "3          1986.0        19.0               W       White   \n",
       "4          1978.0        27.0               B       Black   \n",
       "5          1973.0        32.0               B       Black   \n",
       "\n",
       "                    violation_raw  ... search_type_raw search_type  \\\n",
       "0                        Speeding  ...             NaN         NaN   \n",
       "1                        Speeding  ...             NaN         NaN   \n",
       "3  Equipment/Inspection Violation  ...             NaN         NaN   \n",
       "4  Equipment/Inspection Violation  ...             NaN         NaN   \n",
       "5                Call for Service  ...             NaN         NaN   \n",
       "\n",
       "  contraband_found stop_outcome  is_arrested stop_duration  out_of_state  \\\n",
       "0            False     Citation        False      0-15 Min         False   \n",
       "1            False     Citation        False     16-30 Min         False   \n",
       "3            False     Citation        False      0-15 Min         False   \n",
       "4            False     Citation        False      0-15 Min         False   \n",
       "5            False     Citation        False       30+ Min          True   \n",
       "\n",
       "  drugs_related_stop district     stop_datetime  \n",
       "0              False  Zone K1  2005-01-02 01:55  \n",
       "1              False  Zone X4  2005-01-02 20:30  \n",
       "3              False  Zone X4  2005-01-04 12:55  \n",
       "4              False  Zone X4  2005-01-06 01:30  \n",
       "5              False  Zone X1  2005-01-12 08:05  \n",
       "\n",
       "[5 rows x 22 columns]"
      ]
     },
     "execution_count": 367,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 368,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(480584, 22)"
      ]
     },
     "execution_count": 368,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 369,
   "metadata": {},
   "outputs": [],
   "source": [
    "ri['stop_datetime'] = pd.to_datetime(combined)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 370,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('<M8[ns]')"
      ]
     },
     "execution_count": 370,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.stop_datetime.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 371,
   "metadata": {},
   "outputs": [],
   "source": [
    "ri.set_index(\"stop_datetime\", inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 372,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DatetimeIndex(['2005-01-02 01:55:00', '2005-01-02 20:30:00',\n",
       "               '2005-01-04 12:55:00', '2005-01-06 01:30:00',\n",
       "               '2005-01-12 08:05:00', '2005-01-18 08:15:00',\n",
       "               '2005-01-18 17:13:00', '2005-01-23 23:15:00',\n",
       "               '2005-01-24 20:32:00', '2005-02-09 03:05:00',\n",
       "               ...\n",
       "               '2015-12-31 22:10:00', '2015-12-31 22:14:00',\n",
       "               '2015-12-31 22:26:00', '2015-12-31 22:38:00',\n",
       "               '2015-12-31 22:39:00', '2015-12-31 22:46:00',\n",
       "               '2015-12-31 22:47:00', '2015-12-31 23:08:00',\n",
       "               '2015-12-31 23:44:00', '2015-12-31 23:48:00'],\n",
       "              dtype='datetime64[ns]', name='stop_datetime', length=480584, freq=None)"
      ]
     },
     "execution_count": 372,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 373,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['stop_date', 'stop_time', 'location_raw', 'police_department',\n",
       "       'driver_gender', 'driver_age_raw', 'driver_age', 'driver_race_raw',\n",
       "       'driver_race', 'violation_raw', 'violation', 'search_conducted',\n",
       "       'search_type_raw', 'search_type', 'contraband_found', 'stop_outcome',\n",
       "       'is_arrested', 'stop_duration', 'out_of_state', 'drugs_related_stop',\n",
       "       'district'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 373,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part-2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 374,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(480584, 21)"
      ]
     },
     "execution_count": 374,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 375,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>stop_date</th>\n",
       "      <th>stop_time</th>\n",
       "      <th>location_raw</th>\n",
       "      <th>police_department</th>\n",
       "      <th>driver_gender</th>\n",
       "      <th>driver_age_raw</th>\n",
       "      <th>driver_age</th>\n",
       "      <th>driver_race_raw</th>\n",
       "      <th>driver_race</th>\n",
       "      <th>violation_raw</th>\n",
       "      <th>...</th>\n",
       "      <th>search_conducted</th>\n",
       "      <th>search_type_raw</th>\n",
       "      <th>search_type</th>\n",
       "      <th>contraband_found</th>\n",
       "      <th>stop_outcome</th>\n",
       "      <th>is_arrested</th>\n",
       "      <th>stop_duration</th>\n",
       "      <th>out_of_state</th>\n",
       "      <th>drugs_related_stop</th>\n",
       "      <th>district</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>stop_datetime</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2005-01-02 01:55:00</th>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>01:55</td>\n",
       "      <td>Zone K1</td>\n",
       "      <td>600</td>\n",
       "      <td>M</td>\n",
       "      <td>1985.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005-01-02 20:30:00</th>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>20:30</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1987.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>16-30 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005-01-04 12:55:00</th>\n",
       "      <td>2005-01-04</td>\n",
       "      <td>12:55</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1986.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Equipment/Inspection Violation</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005-01-06 01:30:00</th>\n",
       "      <td>2005-01-06</td>\n",
       "      <td>01:30</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1978.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>B</td>\n",
       "      <td>Black</td>\n",
       "      <td>Equipment/Inspection Violation</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005-01-12 08:05:00</th>\n",
       "      <td>2005-01-12</td>\n",
       "      <td>08:05</td>\n",
       "      <td>Zone X1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>1973.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>B</td>\n",
       "      <td>Black</td>\n",
       "      <td>Call for Service</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>30+ Min</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      stop_date stop_time location_raw police_department  \\\n",
       "stop_datetime                                                              \n",
       "2005-01-02 01:55:00  2005-01-02     01:55      Zone K1               600   \n",
       "2005-01-02 20:30:00  2005-01-02     20:30      Zone X4               500   \n",
       "2005-01-04 12:55:00  2005-01-04     12:55      Zone X4               500   \n",
       "2005-01-06 01:30:00  2005-01-06     01:30      Zone X4               500   \n",
       "2005-01-12 08:05:00  2005-01-12     08:05      Zone X1                 0   \n",
       "\n",
       "                    driver_gender  driver_age_raw  driver_age driver_race_raw  \\\n",
       "stop_datetime                                                                   \n",
       "2005-01-02 01:55:00             M          1985.0        20.0               W   \n",
       "2005-01-02 20:30:00             M          1987.0        18.0               W   \n",
       "2005-01-04 12:55:00             M          1986.0        19.0               W   \n",
       "2005-01-06 01:30:00             M          1978.0        27.0               B   \n",
       "2005-01-12 08:05:00             M          1973.0        32.0               B   \n",
       "\n",
       "                    driver_race                   violation_raw  ...  \\\n",
       "stop_datetime                                                    ...   \n",
       "2005-01-02 01:55:00       White                        Speeding  ...   \n",
       "2005-01-02 20:30:00       White                        Speeding  ...   \n",
       "2005-01-04 12:55:00       White  Equipment/Inspection Violation  ...   \n",
       "2005-01-06 01:30:00       Black  Equipment/Inspection Violation  ...   \n",
       "2005-01-12 08:05:00       Black                Call for Service  ...   \n",
       "\n",
       "                    search_conducted search_type_raw search_type  \\\n",
       "stop_datetime                                                      \n",
       "2005-01-02 01:55:00            False             NaN         NaN   \n",
       "2005-01-02 20:30:00            False             NaN         NaN   \n",
       "2005-01-04 12:55:00            False             NaN         NaN   \n",
       "2005-01-06 01:30:00            False             NaN         NaN   \n",
       "2005-01-12 08:05:00            False             NaN         NaN   \n",
       "\n",
       "                    contraband_found  stop_outcome is_arrested  stop_duration  \\\n",
       "stop_datetime                                                                   \n",
       "2005-01-02 01:55:00            False      Citation       False       0-15 Min   \n",
       "2005-01-02 20:30:00            False      Citation       False      16-30 Min   \n",
       "2005-01-04 12:55:00            False      Citation       False       0-15 Min   \n",
       "2005-01-06 01:30:00            False      Citation       False       0-15 Min   \n",
       "2005-01-12 08:05:00            False      Citation       False        30+ Min   \n",
       "\n",
       "                    out_of_state drugs_related_stop  district  \n",
       "stop_datetime                                                  \n",
       "2005-01-02 01:55:00        False              False   Zone K1  \n",
       "2005-01-02 20:30:00        False              False   Zone X4  \n",
       "2005-01-04 12:55:00        False              False   Zone X4  \n",
       "2005-01-06 01:30:00        False              False   Zone X4  \n",
       "2005-01-12 08:05:00         True              False   Zone X1  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 375,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 376,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "DatetimeIndex: 480584 entries, 2005-01-02 01:55:00 to 2015-12-31 23:48:00\n",
      "Data columns (total 21 columns):\n",
      " #   Column              Non-Null Count   Dtype  \n",
      "---  ------              --------------   -----  \n",
      " 0   stop_date           480584 non-null  object \n",
      " 1   stop_time           480584 non-null  object \n",
      " 2   location_raw        480584 non-null  object \n",
      " 3   police_department   480584 non-null  object \n",
      " 4   driver_gender       480584 non-null  object \n",
      " 5   driver_age_raw      480583 non-null  float64\n",
      " 6   driver_age          478946 non-null  float64\n",
      " 7   driver_race_raw     480584 non-null  object \n",
      " 8   driver_race         480584 non-null  object \n",
      " 9   violation_raw       480584 non-null  object \n",
      " 10  violation           480584 non-null  object \n",
      " 11  search_conducted    480584 non-null  object \n",
      " 12  search_type_raw     17762 non-null   object \n",
      " 13  search_type         17762 non-null   object \n",
      " 14  contraband_found    480584 non-null  bool   \n",
      " 15  stop_outcome        480584 non-null  object \n",
      " 16  is_arrested         480584 non-null  bool   \n",
      " 17  stop_duration       480584 non-null  object \n",
      " 18  out_of_state        479776 non-null  object \n",
      " 19  drugs_related_stop  480584 non-null  bool   \n",
      " 20  district            480584 non-null  object \n",
      "dtypes: bool(3), float64(2), object(16)\n",
      "memory usage: 71.0+ MB\n"
     ]
    }
   ],
   "source": [
    "ri.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 377,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Speeding               0.559186\n",
       "Moving violation       0.187747\n",
       "Equipment              0.127449\n",
       "Other                  0.050389\n",
       "Registration/plates    0.041262\n",
       "Seat belt              0.033967\n",
       "Name: violation, dtype: float64"
      ]
     },
     "execution_count": 377,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.violation.value_counts(normalize = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 378,
   "metadata": {},
   "outputs": [],
   "source": [
    "female = ri[ri.driver_gender == \"F\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 379,
   "metadata": {},
   "outputs": [],
   "source": [
    "male = ri[ri.driver_gender == \"M\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 380,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Speeding               0.657308\n",
       "Moving violation       0.136581\n",
       "Equipment              0.107055\n",
       "Registration/plates    0.043077\n",
       "Other                  0.028908\n",
       "Seat belt              0.027071\n",
       "Name: violation, dtype: float64"
      ]
     },
     "execution_count": 380,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "female.violation.value_counts(normalize=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 381,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Speeding               0.522364\n",
       "Moving violation       0.206948\n",
       "Equipment              0.135102\n",
       "Other                  0.058450\n",
       "Registration/plates    0.040581\n",
       "Seat belt              0.036555\n",
       "Name: violation, dtype: float64"
      ]
     },
     "execution_count": 381,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "male.violation.value_counts(normalize=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 383,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>stop_date</th>\n",
       "      <th>stop_time</th>\n",
       "      <th>location_raw</th>\n",
       "      <th>police_department</th>\n",
       "      <th>driver_gender</th>\n",
       "      <th>driver_age_raw</th>\n",
       "      <th>driver_age</th>\n",
       "      <th>driver_race_raw</th>\n",
       "      <th>driver_race</th>\n",
       "      <th>violation_raw</th>\n",
       "      <th>...</th>\n",
       "      <th>search_conducted</th>\n",
       "      <th>search_type_raw</th>\n",
       "      <th>search_type</th>\n",
       "      <th>contraband_found</th>\n",
       "      <th>stop_outcome</th>\n",
       "      <th>is_arrested</th>\n",
       "      <th>stop_duration</th>\n",
       "      <th>out_of_state</th>\n",
       "      <th>drugs_related_stop</th>\n",
       "      <th>district</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>stop_datetime</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2005-02-24 01:20:00</th>\n",
       "      <td>2005-02-24</td>\n",
       "      <td>01:20</td>\n",
       "      <td>Zone X3</td>\n",
       "      <td>200</td>\n",
       "      <td>F</td>\n",
       "      <td>1983.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005-03-14 10:00:00</th>\n",
       "      <td>2005-03-14</td>\n",
       "      <td>10:00</td>\n",
       "      <td>Zone K3</td>\n",
       "      <td>300</td>\n",
       "      <td>F</td>\n",
       "      <td>1984.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005-03-29 23:20:00</th>\n",
       "      <td>2005-03-29</td>\n",
       "      <td>23:20</td>\n",
       "      <td>Zone K3</td>\n",
       "      <td>300</td>\n",
       "      <td>F</td>\n",
       "      <td>1971.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005-06-06 13:20:00</th>\n",
       "      <td>2005-06-06</td>\n",
       "      <td>13:20</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>F</td>\n",
       "      <td>1986.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005-07-06 11:22:00</th>\n",
       "      <td>2005-07-06</td>\n",
       "      <td>11:22</td>\n",
       "      <td>Zone X1</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>1973.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-31 19:44:00</th>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>19:44</td>\n",
       "      <td>Zone K2</td>\n",
       "      <td>500</td>\n",
       "      <td>F</td>\n",
       "      <td>1969.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Warning</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-31 20:05:00</th>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>20:05</td>\n",
       "      <td>Zone K2</td>\n",
       "      <td>900</td>\n",
       "      <td>F</td>\n",
       "      <td>1996.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-31 20:42:00</th>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>20:42</td>\n",
       "      <td>Zone K2</td>\n",
       "      <td>900</td>\n",
       "      <td>F</td>\n",
       "      <td>1978.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>H</td>\n",
       "      <td>Hispanic</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-31 21:47:00</th>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>21:47</td>\n",
       "      <td>Zone K3</td>\n",
       "      <td>300</td>\n",
       "      <td>F</td>\n",
       "      <td>1996.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-31 21:59:00</th>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>21:59</td>\n",
       "      <td>Zone K3</td>\n",
       "      <td>300</td>\n",
       "      <td>F</td>\n",
       "      <td>1994.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>86198 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      stop_date stop_time location_raw police_department  \\\n",
       "stop_datetime                                                              \n",
       "2005-02-24 01:20:00  2005-02-24     01:20      Zone X3               200   \n",
       "2005-03-14 10:00:00  2005-03-14     10:00      Zone K3               300   \n",
       "2005-03-29 23:20:00  2005-03-29     23:20      Zone K3               300   \n",
       "2005-06-06 13:20:00  2005-06-06     13:20      Zone X4               500   \n",
       "2005-07-06 11:22:00  2005-07-06     11:22      Zone X1                 0   \n",
       "...                         ...       ...          ...               ...   \n",
       "2015-12-31 19:44:00  2015-12-31     19:44      Zone K2               500   \n",
       "2015-12-31 20:05:00  2015-12-31     20:05      Zone K2               900   \n",
       "2015-12-31 20:42:00  2015-12-31     20:42      Zone K2               900   \n",
       "2015-12-31 21:47:00  2015-12-31     21:47      Zone K3               300   \n",
       "2015-12-31 21:59:00  2015-12-31     21:59      Zone K3               300   \n",
       "\n",
       "                    driver_gender  driver_age_raw  driver_age driver_race_raw  \\\n",
       "stop_datetime                                                                   \n",
       "2005-02-24 01:20:00             F          1983.0        22.0               W   \n",
       "2005-03-14 10:00:00             F          1984.0        21.0               W   \n",
       "2005-03-29 23:20:00             F          1971.0        34.0               W   \n",
       "2005-06-06 13:20:00             F          1986.0        19.0               W   \n",
       "2005-07-06 11:22:00             F          1973.0        32.0               W   \n",
       "...                           ...             ...         ...             ...   \n",
       "2015-12-31 19:44:00             F          1969.0        46.0               W   \n",
       "2015-12-31 20:05:00             F          1996.0        19.0               W   \n",
       "2015-12-31 20:42:00             F          1978.0        37.0               H   \n",
       "2015-12-31 21:47:00             F          1996.0        19.0               W   \n",
       "2015-12-31 21:59:00             F          1994.0        21.0               W   \n",
       "\n",
       "                    driver_race violation_raw  ... search_conducted  \\\n",
       "stop_datetime                                  ...                    \n",
       "2005-02-24 01:20:00       White      Speeding  ...            False   \n",
       "2005-03-14 10:00:00       White      Speeding  ...            False   \n",
       "2005-03-29 23:20:00       White      Speeding  ...            False   \n",
       "2005-06-06 13:20:00       White      Speeding  ...            False   \n",
       "2005-07-06 11:22:00       White      Speeding  ...            False   \n",
       "...                         ...           ...  ...              ...   \n",
       "2015-12-31 19:44:00       White      Speeding  ...            False   \n",
       "2015-12-31 20:05:00       White      Speeding  ...            False   \n",
       "2015-12-31 20:42:00    Hispanic      Speeding  ...            False   \n",
       "2015-12-31 21:47:00       White      Speeding  ...            False   \n",
       "2015-12-31 21:59:00       White      Speeding  ...            False   \n",
       "\n",
       "                    search_type_raw search_type contraband_found  \\\n",
       "stop_datetime                                                      \n",
       "2005-02-24 01:20:00             NaN         NaN            False   \n",
       "2005-03-14 10:00:00             NaN         NaN            False   \n",
       "2005-03-29 23:20:00             NaN         NaN            False   \n",
       "2005-06-06 13:20:00             NaN         NaN            False   \n",
       "2005-07-06 11:22:00             NaN         NaN            False   \n",
       "...                             ...         ...              ...   \n",
       "2015-12-31 19:44:00             NaN         NaN            False   \n",
       "2015-12-31 20:05:00             NaN         NaN            False   \n",
       "2015-12-31 20:42:00             NaN         NaN            False   \n",
       "2015-12-31 21:47:00             NaN         NaN            False   \n",
       "2015-12-31 21:59:00             NaN         NaN            False   \n",
       "\n",
       "                     stop_outcome is_arrested  stop_duration out_of_state  \\\n",
       "stop_datetime                                                               \n",
       "2005-02-24 01:20:00      Citation       False       0-15 Min         True   \n",
       "2005-03-14 10:00:00      Citation       False       0-15 Min        False   \n",
       "2005-03-29 23:20:00      Citation       False       0-15 Min         True   \n",
       "2005-06-06 13:20:00      Citation       False       0-15 Min        False   \n",
       "2005-07-06 11:22:00      Citation       False       0-15 Min        False   \n",
       "...                           ...         ...            ...          ...   \n",
       "2015-12-31 19:44:00       Warning       False       0-15 Min        False   \n",
       "2015-12-31 20:05:00      Citation       False       0-15 Min        False   \n",
       "2015-12-31 20:42:00      Citation       False       0-15 Min         True   \n",
       "2015-12-31 21:47:00      Citation       False       0-15 Min         True   \n",
       "2015-12-31 21:59:00      Citation       False       0-15 Min        False   \n",
       "\n",
       "                    drugs_related_stop  district  \n",
       "stop_datetime                                     \n",
       "2005-02-24 01:20:00              False   Zone X3  \n",
       "2005-03-14 10:00:00              False   Zone K3  \n",
       "2005-03-29 23:20:00              False   Zone K3  \n",
       "2005-06-06 13:20:00              False   Zone X4  \n",
       "2005-07-06 11:22:00              False   Zone X1  \n",
       "...                                ...       ...  \n",
       "2015-12-31 19:44:00              False   Zone K2  \n",
       "2015-12-31 20:05:00              False   Zone K2  \n",
       "2015-12-31 20:42:00              False   Zone K2  \n",
       "2015-12-31 21:47:00              False   Zone K3  \n",
       "2015-12-31 21:59:00              False   Zone K3  \n",
       "\n",
       "[86198 rows x 21 columns]"
      ]
     },
     "execution_count": 383,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "female_and_speeding = ri[(ri.driver_gender == 'F') & (ri.violation == 'Speeding')]\n",
    "female_and_speeding"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 384,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>stop_date</th>\n",
       "      <th>stop_time</th>\n",
       "      <th>location_raw</th>\n",
       "      <th>police_department</th>\n",
       "      <th>driver_gender</th>\n",
       "      <th>driver_age_raw</th>\n",
       "      <th>driver_age</th>\n",
       "      <th>driver_race_raw</th>\n",
       "      <th>driver_race</th>\n",
       "      <th>violation_raw</th>\n",
       "      <th>...</th>\n",
       "      <th>search_conducted</th>\n",
       "      <th>search_type_raw</th>\n",
       "      <th>search_type</th>\n",
       "      <th>contraband_found</th>\n",
       "      <th>stop_outcome</th>\n",
       "      <th>is_arrested</th>\n",
       "      <th>stop_duration</th>\n",
       "      <th>out_of_state</th>\n",
       "      <th>drugs_related_stop</th>\n",
       "      <th>district</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>stop_datetime</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2005-01-02 01:55:00</th>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>01:55</td>\n",
       "      <td>Zone K1</td>\n",
       "      <td>600</td>\n",
       "      <td>M</td>\n",
       "      <td>1985.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005-01-02 20:30:00</th>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>20:30</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1987.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>16-30 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005-01-18 08:15:00</th>\n",
       "      <td>2005-01-18</td>\n",
       "      <td>08:15</td>\n",
       "      <td>Zone K3</td>\n",
       "      <td>300</td>\n",
       "      <td>M</td>\n",
       "      <td>1965.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005-01-23 23:15:00</th>\n",
       "      <td>2005-01-23</td>\n",
       "      <td>23:15</td>\n",
       "      <td>Zone K3</td>\n",
       "      <td>300</td>\n",
       "      <td>M</td>\n",
       "      <td>1972.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005-01-24 20:32:00</th>\n",
       "      <td>2005-01-24</td>\n",
       "      <td>20:32</td>\n",
       "      <td>Zone K1</td>\n",
       "      <td>600</td>\n",
       "      <td>M</td>\n",
       "      <td>1987.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>Probable Cause</td>\n",
       "      <td>Probable Cause</td>\n",
       "      <td>True</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>Zone K1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-31 20:50:00</th>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>20:50</td>\n",
       "      <td>Zone K2</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1994.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-31 21:42:00</th>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>21:42</td>\n",
       "      <td>Zone X1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>1993.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-31 22:26:00</th>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>22:26</td>\n",
       "      <td>Zone K3</td>\n",
       "      <td>300</td>\n",
       "      <td>M</td>\n",
       "      <td>1964.0</td>\n",
       "      <td>51.0</td>\n",
       "      <td>I</td>\n",
       "      <td>Asian</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-31 22:46:00</th>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>22:46</td>\n",
       "      <td>Zone X1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>1959.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>H</td>\n",
       "      <td>Hispanic</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-31 23:44:00</th>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>23:44</td>\n",
       "      <td>Zone K2</td>\n",
       "      <td>900</td>\n",
       "      <td>M</td>\n",
       "      <td>1984.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>182538 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      stop_date stop_time location_raw police_department  \\\n",
       "stop_datetime                                                              \n",
       "2005-01-02 01:55:00  2005-01-02     01:55      Zone K1               600   \n",
       "2005-01-02 20:30:00  2005-01-02     20:30      Zone X4               500   \n",
       "2005-01-18 08:15:00  2005-01-18     08:15      Zone K3               300   \n",
       "2005-01-23 23:15:00  2005-01-23     23:15      Zone K3               300   \n",
       "2005-01-24 20:32:00  2005-01-24     20:32      Zone K1               600   \n",
       "...                         ...       ...          ...               ...   \n",
       "2015-12-31 20:50:00  2015-12-31     20:50      Zone K2               500   \n",
       "2015-12-31 21:42:00  2015-12-31     21:42      Zone X1                 0   \n",
       "2015-12-31 22:26:00  2015-12-31     22:26      Zone K3               300   \n",
       "2015-12-31 22:46:00  2015-12-31     22:46      Zone X1                 0   \n",
       "2015-12-31 23:44:00  2015-12-31     23:44      Zone K2               900   \n",
       "\n",
       "                    driver_gender  driver_age_raw  driver_age driver_race_raw  \\\n",
       "stop_datetime                                                                   \n",
       "2005-01-02 01:55:00             M          1985.0        20.0               W   \n",
       "2005-01-02 20:30:00             M          1987.0        18.0               W   \n",
       "2005-01-18 08:15:00             M          1965.0        40.0               W   \n",
       "2005-01-23 23:15:00             M          1972.0        33.0               W   \n",
       "2005-01-24 20:32:00             M          1987.0        18.0               W   \n",
       "...                           ...             ...         ...             ...   \n",
       "2015-12-31 20:50:00             M          1994.0        21.0               W   \n",
       "2015-12-31 21:42:00             M          1993.0        22.0               W   \n",
       "2015-12-31 22:26:00             M          1964.0        51.0               I   \n",
       "2015-12-31 22:46:00             M          1959.0        56.0               H   \n",
       "2015-12-31 23:44:00             M          1984.0        31.0               W   \n",
       "\n",
       "                    driver_race violation_raw  ... search_conducted  \\\n",
       "stop_datetime                                  ...                    \n",
       "2005-01-02 01:55:00       White      Speeding  ...            False   \n",
       "2005-01-02 20:30:00       White      Speeding  ...            False   \n",
       "2005-01-18 08:15:00       White      Speeding  ...            False   \n",
       "2005-01-23 23:15:00       White      Speeding  ...            False   \n",
       "2005-01-24 20:32:00       White      Speeding  ...             True   \n",
       "...                         ...           ...  ...              ...   \n",
       "2015-12-31 20:50:00       White      Speeding  ...            False   \n",
       "2015-12-31 21:42:00       White      Speeding  ...            False   \n",
       "2015-12-31 22:26:00       Asian      Speeding  ...            False   \n",
       "2015-12-31 22:46:00    Hispanic      Speeding  ...            False   \n",
       "2015-12-31 23:44:00       White      Speeding  ...            False   \n",
       "\n",
       "                    search_type_raw     search_type contraband_found  \\\n",
       "stop_datetime                                                          \n",
       "2005-01-02 01:55:00             NaN             NaN            False   \n",
       "2005-01-02 20:30:00             NaN             NaN            False   \n",
       "2005-01-18 08:15:00             NaN             NaN            False   \n",
       "2005-01-23 23:15:00             NaN             NaN            False   \n",
       "2005-01-24 20:32:00  Probable Cause  Probable Cause             True   \n",
       "...                             ...             ...              ...   \n",
       "2015-12-31 20:50:00             NaN             NaN            False   \n",
       "2015-12-31 21:42:00             NaN             NaN            False   \n",
       "2015-12-31 22:26:00             NaN             NaN            False   \n",
       "2015-12-31 22:46:00             NaN             NaN            False   \n",
       "2015-12-31 23:44:00             NaN             NaN            False   \n",
       "\n",
       "                     stop_outcome is_arrested  stop_duration out_of_state  \\\n",
       "stop_datetime                                                               \n",
       "2005-01-02 01:55:00      Citation       False       0-15 Min        False   \n",
       "2005-01-02 20:30:00      Citation       False      16-30 Min        False   \n",
       "2005-01-18 08:15:00      Citation       False       0-15 Min         True   \n",
       "2005-01-23 23:15:00      Citation       False       0-15 Min         True   \n",
       "2005-01-24 20:32:00      Citation       False       0-15 Min         True   \n",
       "...                           ...         ...            ...          ...   \n",
       "2015-12-31 20:50:00      Citation       False       0-15 Min        False   \n",
       "2015-12-31 21:42:00      Citation       False       0-15 Min         True   \n",
       "2015-12-31 22:26:00      Citation       False       0-15 Min         True   \n",
       "2015-12-31 22:46:00      Citation       False       0-15 Min         True   \n",
       "2015-12-31 23:44:00      Citation       False       0-15 Min        False   \n",
       "\n",
       "                    drugs_related_stop  district  \n",
       "stop_datetime                                     \n",
       "2005-01-02 01:55:00              False   Zone K1  \n",
       "2005-01-02 20:30:00              False   Zone X4  \n",
       "2005-01-18 08:15:00              False   Zone K3  \n",
       "2005-01-23 23:15:00              False   Zone K3  \n",
       "2005-01-24 20:32:00               True   Zone K1  \n",
       "...                                ...       ...  \n",
       "2015-12-31 20:50:00              False   Zone K2  \n",
       "2015-12-31 21:42:00              False   Zone X1  \n",
       "2015-12-31 22:26:00              False   Zone K3  \n",
       "2015-12-31 22:46:00              False   Zone X1  \n",
       "2015-12-31 23:44:00              False   Zone K2  \n",
       "\n",
       "[182538 rows x 21 columns]"
      ]
     },
     "execution_count": 384,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "male_and_speeding = ri[(ri.driver_gender == 'M') & (ri.violation == 'Speeding')]\n",
    "male_and_speeding"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 385,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Citation            0.953247\n",
       "Warning             0.039003\n",
       "Arrest Driver       0.005290\n",
       "Arrest Passenger    0.001033\n",
       "N/D                 0.000905\n",
       "No Action           0.000522\n",
       "Name: stop_outcome, dtype: float64"
      ]
     },
     "execution_count": 385,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "F_stop_outcome = female_and_speeding.stop_outcome.value_counts(normalize = True)\n",
    "F_stop_outcome"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 386,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Citation            0.944636\n",
       "Warning             0.036086\n",
       "Arrest Driver       0.015767\n",
       "Arrest Passenger    0.001265\n",
       "N/D                 0.001183\n",
       "No Action           0.001063\n",
       "Name: stop_outcome, dtype: float64"
      ]
     },
     "execution_count": 386,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "M_stop_outcome = male_and_speeding.stop_outcome.value_counts(normalize = True)\n",
    "M_stop_outcome"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 387,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False    0.963041\n",
       "True     0.036959\n",
       "Name: search_conducted, dtype: float64"
      ]
     },
     "execution_count": 387,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.search_conducted.value_counts(normalize=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 391,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('O')"
      ]
     },
     "execution_count": 391,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.search_conducted.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 392,
   "metadata": {},
   "outputs": [],
   "source": [
    "ri[\"search_conducted\"] = ri.search_conducted.astype(bool)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 393,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('bool')"
      ]
     },
     "execution_count": 393,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.search_conducted.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 394,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.036959199640437465"
      ]
     },
     "execution_count": 394,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.search_conducted.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 395,
   "metadata": {},
   "outputs": [],
   "source": [
    "group_gender = ri[ri.search_conducted == True]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 396,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "driver_gender\n",
       "F    131138\n",
       "M    349446\n",
       "Name: search_conducted, dtype: int64"
      ]
     },
     "execution_count": 396,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.groupby(\"driver_gender\")[\"search_conducted\"].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 397,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "driver_gender\n",
       "F    0.018751\n",
       "M    0.043792\n",
       "Name: search_conducted, dtype: float64"
      ]
     },
     "execution_count": 397,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.groupby(\"driver_gender\").search_conducted.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 399,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "violation            driver_gender\n",
       "Equipment            F                0.040245\n",
       "                     M                0.070916\n",
       "Moving violation     F                0.038021\n",
       "                     M                0.059156\n",
       "Other                F                0.045898\n",
       "                     M                0.046120\n",
       "Registration/plates  F                0.054700\n",
       "                     M                0.103589\n",
       "Seat belt            F                0.017746\n",
       "                     M                0.031705\n",
       "Speeding             F                0.007738\n",
       "                     M                0.026630\n",
       "Name: search_conducted, dtype: float64"
      ]
     },
     "execution_count": 399,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.groupby([\"violation\", \"driver_gender\"]).search_conducted.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 400,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Incident to Arrest                                          6998\n",
       "Probable Cause                                              4989\n",
       "Reasonable Suspicion                                        1141\n",
       "Inventory                                                   1101\n",
       "Protective Frisk                                             879\n",
       "Incident to Arrest,Inventory                                 649\n",
       "Incident to Arrest,Probable Cause                            552\n",
       "Probable Cause,Reasonable Suspicion                          334\n",
       "Probable Cause,Protective Frisk                              221\n",
       "Incident to Arrest,Protective Frisk                          158\n",
       "Incident to Arrest,Inventory,Probable Cause                  151\n",
       "Inventory,Probable Cause                                     132\n",
       "Protective Frisk,Reasonable Suspicion                         83\n",
       "Incident to Arrest,Inventory,Protective Frisk                 77\n",
       "Incident to Arrest,Probable Cause,Protective Frisk            74\n",
       "Inventory,Protective Frisk                                    52\n",
       "Incident to Arrest,Reasonable Suspicion                       49\n",
       "Incident to Arrest,Probable Cause,Reasonable Suspicion        31\n",
       "Probable Cause,Protective Frisk,Reasonable Suspicion          31\n",
       "Inventory,Reasonable Suspicion                                17\n",
       "Inventory,Probable Cause,Protective Frisk                     14\n",
       "Incident to Arrest,Inventory,Reasonable Suspicion             12\n",
       "Incident to Arrest,Protective Frisk,Reasonable Suspicion       8\n",
       "Inventory,Probable Cause,Reasonable Suspicion                  8\n",
       "Inventory,Protective Frisk,Reasonable Suspicion                1\n",
       "Name: search_type, dtype: int64"
      ]
     },
     "execution_count": 400,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.search_type.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 401,
   "metadata": {},
   "outputs": [],
   "source": [
    "ri[\"frisk\"] = ri.search_type.str.contains(\"Protective Frisk\", na = False)  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 402,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('bool')"
      ]
     },
     "execution_count": 402,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.frisk.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 403,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1598"
      ]
     },
     "execution_count": 403,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.frisk.sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 404,
   "metadata": {},
   "outputs": [],
   "source": [
    "searched = ri[ri.search_conducted == True]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 405,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.08996734601959239"
      ]
     },
     "execution_count": 405,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "searched.frisk.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 406,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "driver_gender\n",
       "F    0.066694\n",
       "M    0.093707\n",
       "Name: frisk, dtype: float64"
      ]
     },
     "execution_count": 406,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "searched.groupby('driver_gender').frisk.mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Part-3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 407,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(480584, 22)"
      ]
     },
     "execution_count": 407,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 408,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>stop_date</th>\n",
       "      <th>stop_time</th>\n",
       "      <th>location_raw</th>\n",
       "      <th>police_department</th>\n",
       "      <th>driver_gender</th>\n",
       "      <th>driver_age_raw</th>\n",
       "      <th>driver_age</th>\n",
       "      <th>driver_race_raw</th>\n",
       "      <th>driver_race</th>\n",
       "      <th>violation_raw</th>\n",
       "      <th>...</th>\n",
       "      <th>search_type_raw</th>\n",
       "      <th>search_type</th>\n",
       "      <th>contraband_found</th>\n",
       "      <th>stop_outcome</th>\n",
       "      <th>is_arrested</th>\n",
       "      <th>stop_duration</th>\n",
       "      <th>out_of_state</th>\n",
       "      <th>drugs_related_stop</th>\n",
       "      <th>district</th>\n",
       "      <th>frisk</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>stop_datetime</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2005-01-02 01:55:00</th>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>01:55</td>\n",
       "      <td>Zone K1</td>\n",
       "      <td>600</td>\n",
       "      <td>M</td>\n",
       "      <td>1985.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K1</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005-01-02 20:30:00</th>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>20:30</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1987.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Speeding</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>16-30 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005-01-04 12:55:00</th>\n",
       "      <td>2005-01-04</td>\n",
       "      <td>12:55</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1986.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>Equipment/Inspection Violation</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005-01-06 01:30:00</th>\n",
       "      <td>2005-01-06</td>\n",
       "      <td>01:30</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1978.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>B</td>\n",
       "      <td>Black</td>\n",
       "      <td>Equipment/Inspection Violation</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005-01-12 08:05:00</th>\n",
       "      <td>2005-01-12</td>\n",
       "      <td>08:05</td>\n",
       "      <td>Zone X1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>1973.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>B</td>\n",
       "      <td>Black</td>\n",
       "      <td>Call for Service</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>30+ Min</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X1</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      stop_date stop_time location_raw police_department  \\\n",
       "stop_datetime                                                              \n",
       "2005-01-02 01:55:00  2005-01-02     01:55      Zone K1               600   \n",
       "2005-01-02 20:30:00  2005-01-02     20:30      Zone X4               500   \n",
       "2005-01-04 12:55:00  2005-01-04     12:55      Zone X4               500   \n",
       "2005-01-06 01:30:00  2005-01-06     01:30      Zone X4               500   \n",
       "2005-01-12 08:05:00  2005-01-12     08:05      Zone X1                 0   \n",
       "\n",
       "                    driver_gender  driver_age_raw  driver_age driver_race_raw  \\\n",
       "stop_datetime                                                                   \n",
       "2005-01-02 01:55:00             M          1985.0        20.0               W   \n",
       "2005-01-02 20:30:00             M          1987.0        18.0               W   \n",
       "2005-01-04 12:55:00             M          1986.0        19.0               W   \n",
       "2005-01-06 01:30:00             M          1978.0        27.0               B   \n",
       "2005-01-12 08:05:00             M          1973.0        32.0               B   \n",
       "\n",
       "                    driver_race                   violation_raw  ...  \\\n",
       "stop_datetime                                                    ...   \n",
       "2005-01-02 01:55:00       White                        Speeding  ...   \n",
       "2005-01-02 20:30:00       White                        Speeding  ...   \n",
       "2005-01-04 12:55:00       White  Equipment/Inspection Violation  ...   \n",
       "2005-01-06 01:30:00       Black  Equipment/Inspection Violation  ...   \n",
       "2005-01-12 08:05:00       Black                Call for Service  ...   \n",
       "\n",
       "                    search_type_raw  search_type contraband_found  \\\n",
       "stop_datetime                                                       \n",
       "2005-01-02 01:55:00             NaN          NaN            False   \n",
       "2005-01-02 20:30:00             NaN          NaN            False   \n",
       "2005-01-04 12:55:00             NaN          NaN            False   \n",
       "2005-01-06 01:30:00             NaN          NaN            False   \n",
       "2005-01-12 08:05:00             NaN          NaN            False   \n",
       "\n",
       "                    stop_outcome  is_arrested stop_duration  out_of_state  \\\n",
       "stop_datetime                                                               \n",
       "2005-01-02 01:55:00     Citation        False      0-15 Min         False   \n",
       "2005-01-02 20:30:00     Citation        False     16-30 Min         False   \n",
       "2005-01-04 12:55:00     Citation        False      0-15 Min         False   \n",
       "2005-01-06 01:30:00     Citation        False      0-15 Min         False   \n",
       "2005-01-12 08:05:00     Citation        False       30+ Min          True   \n",
       "\n",
       "                    drugs_related_stop district  frisk  \n",
       "stop_datetime                                           \n",
       "2005-01-02 01:55:00              False  Zone K1  False  \n",
       "2005-01-02 20:30:00              False  Zone X4  False  \n",
       "2005-01-04 12:55:00              False  Zone X4  False  \n",
       "2005-01-06 01:30:00              False  Zone X4  False  \n",
       "2005-01-12 08:05:00              False  Zone X1  False  \n",
       "\n",
       "[5 rows x 22 columns]"
      ]
     },
     "execution_count": 408,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 409,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.03454755048024903"
      ]
     },
     "execution_count": 409,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.is_arrested.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 410,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "stop_datetime\n",
       "0     0.052151\n",
       "1     0.067127\n",
       "2     0.061067\n",
       "3     0.052613\n",
       "4     0.053897\n",
       "5     0.032657\n",
       "6     0.012949\n",
       "7     0.013829\n",
       "8     0.019717\n",
       "9     0.024699\n",
       "10    0.025583\n",
       "11    0.027078\n",
       "12    0.031361\n",
       "13    0.030250\n",
       "14    0.031531\n",
       "15    0.032125\n",
       "16    0.033519\n",
       "17    0.038989\n",
       "18    0.039902\n",
       "19    0.031366\n",
       "20    0.039292\n",
       "21    0.059956\n",
       "22    0.043980\n",
       "23    0.045087\n",
       "Name: is_arrested, dtype: float64"
      ]
     },
     "execution_count": 410,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.groupby(ri.index.hour).is_arrested.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 411,
   "metadata": {},
   "outputs": [],
   "source": [
    "hourly_arrest_rate = ri.groupby(ri.index.hour).is_arrested.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 412,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "hourly_arrest_rate.plot()\n",
    "plt.xlabel('stop_time')\n",
    "plt.ylabel('Arrest Rate')\n",
    "plt.title('Arrest Rate by Time of Day');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 414,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('bool')"
      ]
     },
     "execution_count": 414,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.drugs_related_stop.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 416,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "stop_datetime\n",
       "2005-12-31    0.008038\n",
       "2006-12-31    0.006624\n",
       "2007-12-31    0.008437\n",
       "2008-12-31    0.007549\n",
       "2009-12-31    0.010447\n",
       "2010-12-31    0.010142\n",
       "2011-12-31    0.011400\n",
       "2012-12-31    0.010343\n",
       "2013-12-31    0.011879\n",
       "2014-12-31    0.013176\n",
       "2015-12-31    0.010598\n",
       "Freq: A-DEC, Name: drugs_related_stop, dtype: float64"
      ]
     },
     "execution_count": 416,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.drugs_related_stop.resample(\"A\").mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 417,
   "metadata": {},
   "outputs": [],
   "source": [
    "annual_drug_rate = ri.drugs_related_stop.resample(\"A\").mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 418,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "annual_drug_rate.plot();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 419,
   "metadata": {},
   "outputs": [],
   "source": [
    "annual_search_rate = ri.search_conducted.resample(\"A\").mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 420,
   "metadata": {},
   "outputs": [],
   "source": [
    "annual = pd.concat([annual_drug_rate, annual_search_rate], axis=\"columns\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 421,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "annual.plot(subplots=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 422,
   "metadata": {},
   "outputs": [],
   "source": [
    "all_zones = pd.crosstab(ri.district, ri.violation)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 423,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>violation</th>\n",
       "      <th>Equipment</th>\n",
       "      <th>Moving violation</th>\n",
       "      <th>Other</th>\n",
       "      <th>Registration/plates</th>\n",
       "      <th>Seat belt</th>\n",
       "      <th>Speeding</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>district</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Zone K1</th>\n",
       "      <td>3786</td>\n",
       "      <td>7127</td>\n",
       "      <td>1501</td>\n",
       "      <td>628</td>\n",
       "      <td>1</td>\n",
       "      <td>33067</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zone K2</th>\n",
       "      <td>11285</td>\n",
       "      <td>16440</td>\n",
       "      <td>5103</td>\n",
       "      <td>4056</td>\n",
       "      <td>2897</td>\n",
       "      <td>57500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zone K3</th>\n",
       "      <td>12959</td>\n",
       "      <td>16218</td>\n",
       "      <td>3926</td>\n",
       "      <td>3871</td>\n",
       "      <td>3660</td>\n",
       "      <td>68234</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "violation  Equipment  Moving violation  Other  Registration/plates  Seat belt  \\\n",
       "district                                                                        \n",
       "Zone K1         3786              7127   1501                  628          1   \n",
       "Zone K2        11285             16440   5103                 4056       2897   \n",
       "Zone K3        12959             16218   3926                 3871       3660   \n",
       "\n",
       "violation  Speeding  \n",
       "district             \n",
       "Zone K1       33067  \n",
       "Zone K2       57500  \n",
       "Zone K3       68234  "
      ]
     },
     "execution_count": 423,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_zones.loc[\"Zone K1\" : \"Zone K3\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 424,
   "metadata": {},
   "outputs": [],
   "source": [
    "k_zones = all_zones.loc['Zone K1' : 'Zone K3']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 425,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "k_zones.plot(figsize= (10,6),kind = 'bar');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 427,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "k_zones.plot(kind = 'bar', figsize=(10,6), stacked=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 428,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['0-15 Min', '16-30 Min', '30+ Min', '2', '1'], dtype=object)"
      ]
     },
     "execution_count": 428,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.stop_duration.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 429,
   "metadata": {},
   "outputs": [],
   "source": [
    "mapping = {'0-15 Min' : 8, '16-30 Min' : 23, '30+ Min' : 45}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 430,
   "metadata": {},
   "outputs": [],
   "source": [
    "ri['stop_minutes'] = ri.stop_duration.map(mapping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 431,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 8., 23., 45., nan])"
      ]
     },
     "execution_count": 431,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.stop_minutes.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 432,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "violation_raw\n",
      "APB                                 18.593814\n",
      "Call for Service                    21.963314\n",
      "Equipment/Inspection Violation      11.454326\n",
      "Motorist Assist/Courtesy            17.629929\n",
      "Other Traffic Violation             13.834359\n",
      "Registration Violation              13.543268\n",
      "Seatbelt Violation                   9.698236\n",
      "Special Detail/Directed Patrol      14.876778\n",
      "Speeding                            10.589215\n",
      "Suspicious Person                   18.374269\n",
      "Violation of City/Town Ordinance    13.230695\n",
      "Warrant                             19.769231\n",
      "Name: stop_minutes, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "print(ri.groupby('violation_raw').stop_minutes.mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 433,
   "metadata": {},
   "outputs": [],
   "source": [
    "stop_length = ri.groupby('violation_raw').stop_minutes.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 434,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "stop_length.sort_values().plot(kind = 'barh', color = 'blue');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Part-4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 437,
   "metadata": {},
   "outputs": [],
   "source": [
    "weather = pd.read_csv('weather.csv.txt')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 438,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>TAVG</th>\n",
       "      <th>TMIN</th>\n",
       "      <th>TMAX</th>\n",
       "      <th>AWND</th>\n",
       "      <th>WSF2</th>\n",
       "      <th>WT01</th>\n",
       "      <th>WT02</th>\n",
       "      <th>WT03</th>\n",
       "      <th>...</th>\n",
       "      <th>WT11</th>\n",
       "      <th>WT13</th>\n",
       "      <th>WT14</th>\n",
       "      <th>WT15</th>\n",
       "      <th>WT16</th>\n",
       "      <th>WT17</th>\n",
       "      <th>WT18</th>\n",
       "      <th>WT19</th>\n",
       "      <th>WT21</th>\n",
       "      <th>WT22</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>USW00014765</td>\n",
       "      <td>2005-01-01</td>\n",
       "      <td>44.0</td>\n",
       "      <td>35</td>\n",
       "      <td>53</td>\n",
       "      <td>8.95</td>\n",
       "      <td>25.1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>USW00014765</td>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>36.0</td>\n",
       "      <td>28</td>\n",
       "      <td>44</td>\n",
       "      <td>9.40</td>\n",
       "      <td>14.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>USW00014765</td>\n",
       "      <td>2005-01-03</td>\n",
       "      <td>49.0</td>\n",
       "      <td>44</td>\n",
       "      <td>53</td>\n",
       "      <td>6.93</td>\n",
       "      <td>17.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>USW00014765</td>\n",
       "      <td>2005-01-04</td>\n",
       "      <td>42.0</td>\n",
       "      <td>39</td>\n",
       "      <td>45</td>\n",
       "      <td>6.93</td>\n",
       "      <td>16.1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>USW00014765</td>\n",
       "      <td>2005-01-05</td>\n",
       "      <td>36.0</td>\n",
       "      <td>28</td>\n",
       "      <td>43</td>\n",
       "      <td>7.83</td>\n",
       "      <td>17.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       STATION        DATE  TAVG  TMIN  TMAX  AWND  WSF2  WT01  WT02  WT03  \\\n",
       "0  USW00014765  2005-01-01  44.0    35    53  8.95  25.1   1.0   NaN   NaN   \n",
       "1  USW00014765  2005-01-02  36.0    28    44  9.40  14.1   NaN   NaN   NaN   \n",
       "2  USW00014765  2005-01-03  49.0    44    53  6.93  17.0   1.0   NaN   NaN   \n",
       "3  USW00014765  2005-01-04  42.0    39    45  6.93  16.1   1.0   NaN   NaN   \n",
       "4  USW00014765  2005-01-05  36.0    28    43  7.83  17.0   1.0   NaN   NaN   \n",
       "\n",
       "   ...  WT11  WT13  WT14  WT15  WT16  WT17  WT18  WT19  WT21  WT22  \n",
       "0  ...   NaN   1.0   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN  \n",
       "1  ...   NaN   NaN   NaN   NaN   1.0   NaN   1.0   NaN   NaN   NaN  \n",
       "2  ...   NaN   1.0   NaN   NaN   1.0   NaN   NaN   NaN   NaN   NaN  \n",
       "3  ...   NaN   1.0   1.0   NaN   1.0   NaN   NaN   NaN   NaN   NaN  \n",
       "4  ...   NaN   1.0   NaN   NaN   1.0   NaN   1.0   NaN   NaN   NaN  \n",
       "\n",
       "[5 rows x 27 columns]"
      ]
     },
     "execution_count": 438,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 439,
   "metadata": {},
   "outputs": [],
   "source": [
    "# TAVG, TMIN,TMAX : Temperature(Fahrenheit) #AWND, WSF2 : Wind Speed(miles/hour) #WT01 ...WT22 : Bad weather conditions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 441,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TMIN</th>\n",
       "      <th>TAVG</th>\n",
       "      <th>TMAX</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>4017.000000</td>\n",
       "      <td>1217.000000</td>\n",
       "      <td>4017.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>43.484441</td>\n",
       "      <td>52.493016</td>\n",
       "      <td>61.268608</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>17.020298</td>\n",
       "      <td>17.830714</td>\n",
       "      <td>18.199517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-5.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>15.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>30.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>47.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>44.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>62.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>58.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>77.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>77.000000</td>\n",
       "      <td>86.000000</td>\n",
       "      <td>102.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              TMIN         TAVG         TMAX\n",
       "count  4017.000000  1217.000000  4017.000000\n",
       "mean     43.484441    52.493016    61.268608\n",
       "std      17.020298    17.830714    18.199517\n",
       "min      -5.000000     6.000000    15.000000\n",
       "25%      30.000000    39.000000    47.000000\n",
       "50%      44.000000    54.000000    62.000000\n",
       "75%      58.000000    68.000000    77.000000\n",
       "max      77.000000    86.000000   102.000000"
      ]
     },
     "execution_count": 441,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather[[\"TMIN\", \"TAVG\", \"TMAX\"]].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 449,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "weather[[\"TMIN\", \"TAVG\", \"TMAX\"]].plot(kind=\"box\", color=\"red\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 450,
   "metadata": {},
   "outputs": [],
   "source": [
    "weather[\"TDIFF\"] = weather.TMAX - weather.TMIN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 451,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    4017.000000\n",
       "mean       17.784167\n",
       "std         6.350720\n",
       "min         2.000000\n",
       "25%        14.000000\n",
       "50%        18.000000\n",
       "75%        22.000000\n",
       "max        43.000000\n",
       "Name: TDIFF, dtype: float64"
      ]
     },
     "execution_count": 451,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather[\"TDIFF\"].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 462,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "weather[\"TDIFF\"].plot(kind=\"hist\", bins=20, color=\"red\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 458,
   "metadata": {},
   "outputs": [],
   "source": [
    "WT = weather.loc[:, \"WT01\" : \"WT22\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 459,
   "metadata": {},
   "outputs": [],
   "source": [
    "weather[\"bad_conditions\"] = WT.sum(axis=\"columns\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 460,
   "metadata": {},
   "outputs": [],
   "source": [
    "weather[\"bad_conditions\"] = weather.bad_conditions.fillna(0).astype(\"int\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 463,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "weather.bad_conditions.plot(kind=\"hist\", color=\"red\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 464,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    1749\n",
       "1     613\n",
       "2     367\n",
       "3     380\n",
       "4     476\n",
       "5     282\n",
       "6     101\n",
       "7      41\n",
       "8       4\n",
       "9       4\n",
       "Name: bad_conditions, dtype: int64"
      ]
     },
     "execution_count": 464,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.bad_conditions.value_counts().sort_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 465,
   "metadata": {},
   "outputs": [],
   "source": [
    "mapping = {0:'good', 1:'bad', 2:'bad', 3:'bad', 4:'bad', 5:'worse', 6:'worse', 7:'worse', 8:'worse', 9:'worse'}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 466,
   "metadata": {},
   "outputs": [],
   "source": [
    "weather['rating'] = weather.bad_conditions.map(mapping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 467,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "bad      1836\n",
       "good     1749\n",
       "worse     432\n",
       "Name: rating, dtype: int64"
      ]
     },
     "execution_count": 467,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather['rating'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 476,
   "metadata": {},
   "outputs": [],
   "source": [
    "cats = [\"good\", \"bad\", \"worse\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 482,
   "metadata": {},
   "outputs": [],
   "source": [
    "weather[\"rating\"] = weather[\"rating\"].astype( 'category')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 483,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CategoricalDtype(categories=['bad', 'good', 'worse'], ordered=False)"
      ]
     },
     "execution_count": 483,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.rating.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 484,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    bad\n",
       "1    bad\n",
       "2    bad\n",
       "3    bad\n",
       "4    bad\n",
       "Name: rating, dtype: category\n",
       "Categories (3, object): ['bad', 'good', 'worse']"
      ]
     },
     "execution_count": 484,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.rating.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 485,
   "metadata": {},
   "outputs": [],
   "source": [
    "ri.reset_index(inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 488,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>stop_datetime</th>\n",
       "      <th>stop_date</th>\n",
       "      <th>stop_time</th>\n",
       "      <th>location_raw</th>\n",
       "      <th>police_department</th>\n",
       "      <th>driver_gender</th>\n",
       "      <th>driver_age_raw</th>\n",
       "      <th>driver_age</th>\n",
       "      <th>driver_race_raw</th>\n",
       "      <th>driver_race</th>\n",
       "      <th>...</th>\n",
       "      <th>search_type</th>\n",
       "      <th>contraband_found</th>\n",
       "      <th>stop_outcome</th>\n",
       "      <th>is_arrested</th>\n",
       "      <th>stop_duration</th>\n",
       "      <th>out_of_state</th>\n",
       "      <th>drugs_related_stop</th>\n",
       "      <th>district</th>\n",
       "      <th>frisk</th>\n",
       "      <th>stop_minutes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2005-01-02 01:55:00</td>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>01:55</td>\n",
       "      <td>Zone K1</td>\n",
       "      <td>600</td>\n",
       "      <td>M</td>\n",
       "      <td>1985.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone K1</td>\n",
       "      <td>False</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2005-01-02 20:30:00</td>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>20:30</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1987.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>16-30 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>False</td>\n",
       "      <td>23.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2005-01-04 12:55:00</td>\n",
       "      <td>2005-01-04</td>\n",
       "      <td>12:55</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1986.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>W</td>\n",
       "      <td>White</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>False</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2005-01-06 01:30:00</td>\n",
       "      <td>2005-01-06</td>\n",
       "      <td>01:30</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>500</td>\n",
       "      <td>M</td>\n",
       "      <td>1978.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>B</td>\n",
       "      <td>Black</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>0-15 Min</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X4</td>\n",
       "      <td>False</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2005-01-12 08:05:00</td>\n",
       "      <td>2005-01-12</td>\n",
       "      <td>08:05</td>\n",
       "      <td>Zone X1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>1973.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>B</td>\n",
       "      <td>Black</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "      <td>Citation</td>\n",
       "      <td>False</td>\n",
       "      <td>30+ Min</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Zone X1</td>\n",
       "      <td>False</td>\n",
       "      <td>45.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 24 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        stop_datetime   stop_date stop_time location_raw police_department  \\\n",
       "0 2005-01-02 01:55:00  2005-01-02     01:55      Zone K1               600   \n",
       "1 2005-01-02 20:30:00  2005-01-02     20:30      Zone X4               500   \n",
       "2 2005-01-04 12:55:00  2005-01-04     12:55      Zone X4               500   \n",
       "3 2005-01-06 01:30:00  2005-01-06     01:30      Zone X4               500   \n",
       "4 2005-01-12 08:05:00  2005-01-12     08:05      Zone X1                 0   \n",
       "\n",
       "  driver_gender  driver_age_raw  driver_age driver_race_raw driver_race  ...  \\\n",
       "0             M          1985.0        20.0               W       White  ...   \n",
       "1             M          1987.0        18.0               W       White  ...   \n",
       "2             M          1986.0        19.0               W       White  ...   \n",
       "3             M          1978.0        27.0               B       Black  ...   \n",
       "4             M          1973.0        32.0               B       Black  ...   \n",
       "\n",
       "  search_type contraband_found  stop_outcome is_arrested stop_duration  \\\n",
       "0         NaN            False      Citation       False      0-15 Min   \n",
       "1         NaN            False      Citation       False     16-30 Min   \n",
       "2         NaN            False      Citation       False      0-15 Min   \n",
       "3         NaN            False      Citation       False      0-15 Min   \n",
       "4         NaN            False      Citation       False       30+ Min   \n",
       "\n",
       "   out_of_state drugs_related_stop  district  frisk stop_minutes  \n",
       "0         False              False   Zone K1  False          8.0  \n",
       "1         False              False   Zone X4  False         23.0  \n",
       "2         False              False   Zone X4  False          8.0  \n",
       "3         False              False   Zone X4  False          8.0  \n",
       "4          True              False   Zone X1  False         45.0  \n",
       "\n",
       "[5 rows x 24 columns]"
      ]
     },
     "execution_count": 488,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 486,
   "metadata": {},
   "outputs": [],
   "source": [
    "weather_rating = weather[['DATE', 'rating']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 487,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>DATE</th>\n",
       "      <th>rating</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2005-01-01</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2005-01-02</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2005-01-03</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2005-01-04</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2005-01-05</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         DATE rating\n",
       "0  2005-01-01    bad\n",
       "1  2005-01-02    bad\n",
       "2  2005-01-03    bad\n",
       "3  2005-01-04    bad\n",
       "4  2005-01-05    bad"
      ]
     },
     "execution_count": 487,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather_rating.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 489,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(480584, 24)"
      ]
     },
     "execution_count": 489,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 490,
   "metadata": {},
   "outputs": [],
   "source": [
    "ri_weather = pd.merge(left=ri, right=weather_rating, left_on='stop_date', right_on='DATE', how='left')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 491,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(480584, 26)"
      ]
     },
     "execution_count": 491,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri_weather.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 492,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.03454755048024903"
      ]
     },
     "execution_count": 492,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri_weather.is_arrested.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 493,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "rating\n",
       "bad      0.035199\n",
       "good     0.033004\n",
       "worse    0.039360\n",
       "Name: is_arrested, dtype: float64"
      ]
     },
     "execution_count": 493,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri_weather.groupby('rating').is_arrested.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 494,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "violation            rating\n",
       "Equipment            bad       0.059704\n",
       "                     good      0.056484\n",
       "                     worse     0.094373\n",
       "Moving violation     bad       0.057976\n",
       "                     good      0.055621\n",
       "                     worse     0.062249\n",
       "Other                bad       0.084991\n",
       "                     good      0.082492\n",
       "                     worse     0.058704\n",
       "Registration/plates  bad       0.092749\n",
       "                     good      0.076831\n",
       "                     worse     0.098673\n",
       "Seat belt            bad       0.028845\n",
       "                     good      0.025503\n",
       "                     worse     0.000000\n",
       "Speeding             bad       0.013368\n",
       "                     good      0.013214\n",
       "                     worse     0.016600\n",
       "Name: is_arrested, dtype: float64"
      ]
     },
     "execution_count": 494,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ri_weather.groupby(['violation', 'rating']).is_arrested.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 495,
   "metadata": {},
   "outputs": [],
   "source": [
    "arrest_rate = ri_weather.groupby(['violation', 'rating']).is_arrested.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 496,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "violation            rating\n",
       "Equipment            bad       0.059704\n",
       "                     good      0.056484\n",
       "                     worse     0.094373\n",
       "Moving violation     bad       0.057976\n",
       "                     good      0.055621\n",
       "                     worse     0.062249\n",
       "Other                bad       0.084991\n",
       "                     good      0.082492\n",
       "                     worse     0.058704\n",
       "Registration/plates  bad       0.092749\n",
       "                     good      0.076831\n",
       "                     worse     0.098673\n",
       "Seat belt            bad       0.028845\n",
       "                     good      0.025503\n",
       "                     worse     0.000000\n",
       "Speeding             bad       0.013368\n",
       "                     good      0.013214\n",
       "                     worse     0.016600\n",
       "Name: is_arrested, dtype: float64"
      ]
     },
     "execution_count": 496,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "arrest_rate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 498,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.05797625940938043"
      ]
     },
     "execution_count": 498,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mov_violation_bw = arrest_rate.loc['Moving violation', 'bad'] #moving violation bad weather\n",
    "mov_violation_bw "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 501,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "rating\n",
       "bad      0.013368\n",
       "good     0.013214\n",
       "worse    0.016600\n",
       "Name: is_arrested, dtype: float64"
      ]
     },
     "execution_count": 501,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "speeding_violations_weather = arrest_rate.loc['Speeding'] \n",
    "# the arrest rates for speeding violations all three weather categories\n",
    "speeding_violations_weather"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
