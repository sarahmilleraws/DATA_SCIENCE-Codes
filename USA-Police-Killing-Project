{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 351,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np \n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from collections import Counter\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 352,
   "metadata": {},
   "outputs": [],
   "source": [
    "pr = pd.read_csv('PercentagePeopleBelowPovertyLevel.csv.txt', encoding=\"windows-1252\")\n",
    "sr = pd.read_csv('ShareRaceByCity.csv.txt', encoding=\"windows-1252\")\n",
    "kill = pd.read_csv('PoliceKillingsUS.csv.txt', encoding=\"windows-1252\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 353,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Geographic Area</th>\n",
       "      <th>City</th>\n",
       "      <th>poverty_rate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AL</td>\n",
       "      <td>Abanda CDP</td>\n",
       "      <td>78.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AL</td>\n",
       "      <td>Abbeville city</td>\n",
       "      <td>29.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AL</td>\n",
       "      <td>Adamsville city</td>\n",
       "      <td>25.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AL</td>\n",
       "      <td>Addison town</td>\n",
       "      <td>30.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AL</td>\n",
       "      <td>Akron town</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Geographic Area             City poverty_rate\n",
       "0              AL       Abanda CDP         78.8\n",
       "1              AL   Abbeville city         29.1\n",
       "2              AL  Adamsville city         25.5\n",
       "3              AL     Addison town         30.7\n",
       "4              AL       Akron town           42"
      ]
     },
     "execution_count": 353,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pr.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 354,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Geographic area</th>\n",
       "      <th>City</th>\n",
       "      <th>share_white</th>\n",
       "      <th>share_black</th>\n",
       "      <th>share_native_american</th>\n",
       "      <th>share_asian</th>\n",
       "      <th>share_hispanic</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AL</td>\n",
       "      <td>Abanda CDP</td>\n",
       "      <td>67.2</td>\n",
       "      <td>30.2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AL</td>\n",
       "      <td>Abbeville city</td>\n",
       "      <td>54.4</td>\n",
       "      <td>41.4</td>\n",
       "      <td>0.1</td>\n",
       "      <td>1</td>\n",
       "      <td>3.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AL</td>\n",
       "      <td>Adamsville city</td>\n",
       "      <td>52.3</td>\n",
       "      <td>44.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.3</td>\n",
       "      <td>2.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AL</td>\n",
       "      <td>Addison town</td>\n",
       "      <td>99.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AL</td>\n",
       "      <td>Akron town</td>\n",
       "      <td>13.2</td>\n",
       "      <td>86.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Geographic area             City share_white share_black  \\\n",
       "0              AL       Abanda CDP        67.2        30.2   \n",
       "1              AL   Abbeville city        54.4        41.4   \n",
       "2              AL  Adamsville city        52.3        44.9   \n",
       "3              AL     Addison town        99.1         0.1   \n",
       "4              AL       Akron town        13.2        86.5   \n",
       "\n",
       "  share_native_american share_asian share_hispanic  \n",
       "0                     0           0            1.6  \n",
       "1                   0.1           1            3.1  \n",
       "2                   0.5         0.3            2.3  \n",
       "3                     0         0.1            0.4  \n",
       "4                     0           0            0.3  "
      ]
     },
     "execution_count": 354,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sr.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 355,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>date</th>\n",
       "      <th>manner_of_death</th>\n",
       "      <th>armed</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>race</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>signs_of_mental_illness</th>\n",
       "      <th>threat_level</th>\n",
       "      <th>flee</th>\n",
       "      <th>body_camera</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>Tim Elliot</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>53.0</td>\n",
       "      <td>M</td>\n",
       "      <td>A</td>\n",
       "      <td>Shelton</td>\n",
       "      <td>WA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>Lewis Lee Lembke</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>47.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>Aloha</td>\n",
       "      <td>OR</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>John Paul Quintero</td>\n",
       "      <td>03/01/15</td>\n",
       "      <td>shot and Tasered</td>\n",
       "      <td>unarmed</td>\n",
       "      <td>23.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Wichita</td>\n",
       "      <td>KS</td>\n",
       "      <td>False</td>\n",
       "      <td>other</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "      <td>Matthew Hoffman</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>toy weapon</td>\n",
       "      <td>32.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9</td>\n",
       "      <td>Michael Rodriguez</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>nail gun</td>\n",
       "      <td>39.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Evans</td>\n",
       "      <td>CO</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id                name      date   manner_of_death       armed   age  \\\n",
       "0   3          Tim Elliot  02/01/15              shot         gun  53.0   \n",
       "1   4    Lewis Lee Lembke  02/01/15              shot         gun  47.0   \n",
       "2   5  John Paul Quintero  03/01/15  shot and Tasered     unarmed  23.0   \n",
       "3   8     Matthew Hoffman  04/01/15              shot  toy weapon  32.0   \n",
       "4   9   Michael Rodriguez  04/01/15              shot    nail gun  39.0   \n",
       "\n",
       "  gender race           city state  signs_of_mental_illness threat_level  \\\n",
       "0      M    A        Shelton    WA                     True       attack   \n",
       "1      M    W          Aloha    OR                    False       attack   \n",
       "2      M    H        Wichita    KS                    False        other   \n",
       "3      M    W  San Francisco    CA                     True       attack   \n",
       "4      M    H          Evans    CO                    False       attack   \n",
       "\n",
       "          flee  body_camera  \n",
       "0  Not fleeing        False  \n",
       "1  Not fleeing        False  \n",
       "2  Not fleeing        False  \n",
       "3  Not fleeing        False  \n",
       "4  Not fleeing        False  "
      ]
     },
     "execution_count": 355,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1. Mean poverty rate of each state (Geographic Area)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 356,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FL', 'GA',\n",
       "       'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA',\n",
       "       'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY',\n",
       "       'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX',\n",
       "       'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY'], dtype=object)"
      ]
     },
     "execution_count": 356,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pr[\"Geographic Area\"].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 357,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "24255"
      ]
     },
     "execution_count": 357,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pr[\"City\"].nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# INSTRUCTION-1: replace the \"-\" with zero."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 358,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       1464\n",
       "-        201\n",
       "7.4      129\n",
       "6.7      129\n",
       "10.9     128\n",
       "        ... \n",
       "77         1\n",
       "76.5       1\n",
       "56.1       1\n",
       "66.3       1\n",
       "78.3       1\n",
       "Name: poverty_rate, Length: 771, dtype: int64"
      ]
     },
     "execution_count": 358,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pr.poverty_rate.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 359,
   "metadata": {},
   "outputs": [],
   "source": [
    "pr[\"poverty_rate\"] = pr[\"poverty_rate\"].replace(\"-\", 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 360,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       1464\n",
       "0        201\n",
       "6.7      129\n",
       "7.4      129\n",
       "10.9     128\n",
       "        ... \n",
       "76.7       1\n",
       "88.7       1\n",
       "83.9       1\n",
       "67.5       1\n",
       "92         1\n",
       "Name: poverty_rate, Length: 771, dtype: int64"
      ]
     },
     "execution_count": 360,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pr.poverty_rate.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 361,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 29329 entries, 0 to 29328\n",
      "Data columns (total 3 columns):\n",
      " #   Column           Non-Null Count  Dtype \n",
      "---  ------           --------------  ----- \n",
      " 0   Geographic Area  29329 non-null  object\n",
      " 1   City             29329 non-null  object\n",
      " 2   poverty_rate     29329 non-null  object\n",
      "dtypes: object(3)\n",
      "memory usage: 687.5+ KB\n"
     ]
    }
   ],
   "source": [
    "pr.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# INSTRUCTION-2 : Convert type of poverty_rate colum to a numeric type (float)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 362,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('O')"
      ]
     },
     "execution_count": 362,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pr[\"poverty_rate\"].dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 363,
   "metadata": {},
   "outputs": [],
   "source": [
    "pr[\"poverty_rate\"] = pr.poverty_rate.astype(float)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 364,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('float64')"
      ]
     },
     "execution_count": 364,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pr[\"poverty_rate\"].dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 365,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        78.8\n",
       "1        29.1\n",
       "2        25.5\n",
       "3        30.7\n",
       "4        42.0\n",
       "         ... \n",
       "29324    18.6\n",
       "29325    15.3\n",
       "29326     5.9\n",
       "29327     5.4\n",
       "29328     0.0\n",
       "Name: poverty_rate, Length: 29329, dtype: float64"
      ]
     },
     "execution_count": 365,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pr[\"poverty_rate\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 366,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 29329 entries, 0 to 29328\n",
      "Data columns (total 3 columns):\n",
      " #   Column           Non-Null Count  Dtype  \n",
      "---  ------           --------------  -----  \n",
      " 0   Geographic Area  29329 non-null  object \n",
      " 1   City             29329 non-null  object \n",
      " 2   poverty_rate     29329 non-null  float64\n",
      "dtypes: float64(1), object(2)\n",
      "memory usage: 687.5+ KB\n"
     ]
    }
   ],
   "source": [
    "pr.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 367,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0     1665\n",
       "6.7      129\n",
       "7.4      129\n",
       "10.0     128\n",
       "10.9     128\n",
       "        ... \n",
       "56.3       1\n",
       "44.5       1\n",
       "76.3       1\n",
       "77.2       1\n",
       "62.2       1\n",
       "Name: poverty_rate, Length: 770, dtype: int64"
      ]
     },
     "execution_count": 367,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pr.poverty_rate.value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# INSTRUCTION-3 : Plot the Poverty rate of each state. (Demonstrate mean value of each Geogrophic Area (AL, AK, AR).)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# INSTRUCTION-3.a.1 : Plot With Pandas Built in method:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 368,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Geographic Area</th>\n",
       "      <th>City</th>\n",
       "      <th>poverty_rate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AL</td>\n",
       "      <td>Abanda CDP</td>\n",
       "      <td>78.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AL</td>\n",
       "      <td>Abbeville city</td>\n",
       "      <td>29.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AL</td>\n",
       "      <td>Adamsville city</td>\n",
       "      <td>25.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AL</td>\n",
       "      <td>Addison town</td>\n",
       "      <td>30.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AL</td>\n",
       "      <td>Akron town</td>\n",
       "      <td>42.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Geographic Area             City  poverty_rate\n",
       "0              AL       Abanda CDP          78.8\n",
       "1              AL   Abbeville city          29.1\n",
       "2              AL  Adamsville city          25.5\n",
       "3              AL     Addison town          30.7\n",
       "4              AL       Akron town          42.0"
      ]
     },
     "execution_count": 368,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pr.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 369,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Geographic Area\n",
       "AK    18.678592\n",
       "AL    20.611795\n",
       "AR    22.963216\n",
       "AZ    25.268071\n",
       "CA    16.888371\n",
       "Name: poverty_rate, dtype: float64"
      ]
     },
     "execution_count": 369,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pr.groupby(\"Geographic Area\").poverty_rate.mean().head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 370,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots()\n",
    "\n",
    "(pr.groupby(\"Geographic Area\").poverty_rate.mean()).plot.bar(x= \"Geographic Area\", y=\"poverty_rate\", rot=45, ax=axs,figsize=(12,8))\n",
    "axs.set_xlabel(\"States\")\n",
    "axs.set_ylabel(\"Poverty Rate\")\n",
    "axs.set_title(\"Poverty Rate Given States\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 371,
   "metadata": {},
   "outputs": [],
   "source": [
    "States= pr.groupby(\"Geographic Area\").poverty_rate.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 477,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "States.plot.bar(figsize=(12,7), title=\"Poverty Rate Given States\", rot=45);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# INSTRUCTION-3.a.2 : Plot Sorted Values With Pandas Built in method:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 373,
   "metadata": {},
   "outputs": [],
   "source": [
    "sort_states= States.sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 374,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots()\n",
    "sort_states.plot.bar(x= \"Geographic Area\", y=\"poverty_rate\", ax=axs, sort_columns= bool, figsize=(12,8))\n",
    "axs.set_xlabel(\"States\")\n",
    "axs.set_ylabel(\"Poverty Rate\")\n",
    "axs.set_title(\"Poverty Rate Given States\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# INSTRUCTION-3.b : Plot Sorted Values With Seaborn and set a green horizontal line on 20"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 375,
   "metadata": {},
   "outputs": [],
   "source": [
    "order=pr.sort_values(by=[\"poverty_rate\"], ascending=[False])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 376,
   "metadata": {},
   "outputs": [],
   "source": [
    "labels=pr.groupby(\"Geographic Area\").poverty_rate.mean().sort_values(ascending=False).index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 377,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1008x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax =plt.subplots(figsize=(14,10))\n",
    "sns.barplot(x= \"Geographic Area\", y= \"poverty_rate\", order=labels, data= pr)\n",
    "ax.axhline(y=20, color=\"green\", ls=\"--\")\n",
    "ax.set_xlabel(\"States\")\n",
    "ax.set_ylabel(\"Poverty Rate\")\n",
    "ax.set_title(\"Poverty Rate Given States\")\n",
    "ax.set_xticklabels(labels, rotation=45);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2. Most common 15 Name or Surname of killed people"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 378,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>date</th>\n",
       "      <th>manner_of_death</th>\n",
       "      <th>armed</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>race</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>signs_of_mental_illness</th>\n",
       "      <th>threat_level</th>\n",
       "      <th>flee</th>\n",
       "      <th>body_camera</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>Tim Elliot</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>53.0</td>\n",
       "      <td>M</td>\n",
       "      <td>A</td>\n",
       "      <td>Shelton</td>\n",
       "      <td>WA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>Lewis Lee Lembke</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>47.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>Aloha</td>\n",
       "      <td>OR</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>John Paul Quintero</td>\n",
       "      <td>03/01/15</td>\n",
       "      <td>shot and Tasered</td>\n",
       "      <td>unarmed</td>\n",
       "      <td>23.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Wichita</td>\n",
       "      <td>KS</td>\n",
       "      <td>False</td>\n",
       "      <td>other</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "      <td>Matthew Hoffman</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>toy weapon</td>\n",
       "      <td>32.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9</td>\n",
       "      <td>Michael Rodriguez</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>nail gun</td>\n",
       "      <td>39.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Evans</td>\n",
       "      <td>CO</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id                name      date   manner_of_death       armed   age  \\\n",
       "0   3          Tim Elliot  02/01/15              shot         gun  53.0   \n",
       "1   4    Lewis Lee Lembke  02/01/15              shot         gun  47.0   \n",
       "2   5  John Paul Quintero  03/01/15  shot and Tasered     unarmed  23.0   \n",
       "3   8     Matthew Hoffman  04/01/15              shot  toy weapon  32.0   \n",
       "4   9   Michael Rodriguez  04/01/15              shot    nail gun  39.0   \n",
       "\n",
       "  gender race           city state  signs_of_mental_illness threat_level  \\\n",
       "0      M    A        Shelton    WA                     True       attack   \n",
       "1      M    W          Aloha    OR                    False       attack   \n",
       "2      M    H        Wichita    KS                    False        other   \n",
       "3      M    W  San Francisco    CA                     True       attack   \n",
       "4      M    H          Evans    CO                    False       attack   \n",
       "\n",
       "          flee  body_camera  \n",
       "0  Not fleeing        False  \n",
       "1  Not fleeing        False  \n",
       "2  Not fleeing        False  \n",
       "3  Not fleeing        False  \n",
       "4  Not fleeing        False  "
      ]
     },
     "execution_count": 378,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 379,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2535, 14)"
      ]
     },
     "execution_count": 379,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 380,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2535"
      ]
     },
     "execution_count": 380,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill[\"name\"].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 381,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "TK TK                       49\n",
       "TK Tk                        2\n",
       "Brandon Jones                2\n",
       "Michael Brown                2\n",
       "Daquan Antonio Westbrook     2\n",
       "                            ..\n",
       "Westley Daum                 1\n",
       "Michael K. Casper            1\n",
       "Bruce Dawley                 1\n",
       "Terry Lynn Maurer            1\n",
       "Richard Parent               1\n",
       "Name: name, Length: 2481, dtype: int64"
      ]
     },
     "execution_count": 381,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill[\"name\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 382,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0             [Tim, Elliot]\n",
       "1      [Lewis, Lee, Lembke]\n",
       "2    [John, Paul, Quintero]\n",
       "3        [Matthew, Hoffman]\n",
       "4      [Michael, Rodriguez]\n",
       "Name: name, dtype: object"
      ]
     },
     "execution_count": 382,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pairs = kill.name[kill.name != 'TK TK'].str.split()\n",
    "pairs.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 383,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.series.Series"
      ]
     },
     "execution_count": 383,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(pairs)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# INSTRUCTION : Plot Most common 15 Name OR Surname of killed people"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 384,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>date</th>\n",
       "      <th>manner_of_death</th>\n",
       "      <th>armed</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>race</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>signs_of_mental_illness</th>\n",
       "      <th>threat_level</th>\n",
       "      <th>flee</th>\n",
       "      <th>body_camera</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>Tim Elliot</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>53.0</td>\n",
       "      <td>M</td>\n",
       "      <td>A</td>\n",
       "      <td>Shelton</td>\n",
       "      <td>WA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>Lewis Lee Lembke</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>47.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>Aloha</td>\n",
       "      <td>OR</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>John Paul Quintero</td>\n",
       "      <td>03/01/15</td>\n",
       "      <td>shot and Tasered</td>\n",
       "      <td>unarmed</td>\n",
       "      <td>23.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Wichita</td>\n",
       "      <td>KS</td>\n",
       "      <td>False</td>\n",
       "      <td>other</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "      <td>Matthew Hoffman</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>toy weapon</td>\n",
       "      <td>32.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9</td>\n",
       "      <td>Michael Rodriguez</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>nail gun</td>\n",
       "      <td>39.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Evans</td>\n",
       "      <td>CO</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id                name      date   manner_of_death       armed   age  \\\n",
       "0   3          Tim Elliot  02/01/15              shot         gun  53.0   \n",
       "1   4    Lewis Lee Lembke  02/01/15              shot         gun  47.0   \n",
       "2   5  John Paul Quintero  03/01/15  shot and Tasered     unarmed  23.0   \n",
       "3   8     Matthew Hoffman  04/01/15              shot  toy weapon  32.0   \n",
       "4   9   Michael Rodriguez  04/01/15              shot    nail gun  39.0   \n",
       "\n",
       "  gender race           city state  signs_of_mental_illness threat_level  \\\n",
       "0      M    A        Shelton    WA                     True       attack   \n",
       "1      M    W          Aloha    OR                    False       attack   \n",
       "2      M    H        Wichita    KS                    False        other   \n",
       "3      M    W  San Francisco    CA                     True       attack   \n",
       "4      M    H          Evans    CO                    False       attack   \n",
       "\n",
       "          flee  body_camera  \n",
       "0  Not fleeing        False  \n",
       "1  Not fleeing        False  \n",
       "2  Not fleeing        False  \n",
       "3  Not fleeing        False  \n",
       "4  Not fleeing        False  "
      ]
     },
     "execution_count": 384,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 385,
   "metadata": {},
   "outputs": [],
   "source": [
    "# pairs.shape, pairs[0], pairs[0][0], \n",
    "#table=[]\n",
    "#for i in pairs:,for j in i .. formülüyle isim ve soyisimleri saydırıyoruz"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 386,
   "metadata": {},
   "outputs": [],
   "source": [
    "seperate = kill.name[kill.name != \"TK TK\"].str.split()\n",
    "a,b = zip(*seperate)\n",
    "name_list =a+b\n",
    "name_count = Counter(name_list)\n",
    "most_common_names = name_count.most_common(15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 387,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[('Michael', 91),\n",
       " ('David', 57),\n",
       " ('James', 56),\n",
       " ('Robert', 48),\n",
       " ('Joseph', 48),\n",
       " ('William', 47),\n",
       " ('Daniel', 46),\n",
       " ('John', 42),\n",
       " ('Christopher', 40),\n",
       " ('Lee', 37),\n",
       " ('Richard', 36),\n",
       " ('J.', 32),\n",
       " ('Anthony', 31),\n",
       " ('Jose', 28),\n",
       " ('Joshua', 28)]"
      ]
     },
     "execution_count": 387,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "most_common_names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 388,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name_or_surname_most_frequency</th>\n",
       "      <th>frequency</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Michael</td>\n",
       "      <td>91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>David</td>\n",
       "      <td>57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>James</td>\n",
       "      <td>56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Robert</td>\n",
       "      <td>48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Joseph</td>\n",
       "      <td>48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>William</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Daniel</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>John</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Christopher</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Lee</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Richard</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>J.</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Anthony</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Jose</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Joshua</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   name_or_surname_most_frequency  frequency\n",
       "0                         Michael         91\n",
       "1                           David         57\n",
       "2                           James         56\n",
       "3                          Robert         48\n",
       "4                          Joseph         48\n",
       "5                         William         47\n",
       "6                          Daniel         46\n",
       "7                            John         42\n",
       "8                     Christopher         40\n",
       "9                             Lee         37\n",
       "10                        Richard         36\n",
       "11                             J.         32\n",
       "12                        Anthony         31\n",
       "13                           Jose         28\n",
       "14                         Joshua         28"
      ]
     },
     "execution_count": 388,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.DataFrame(list(most_common_names), columns=[\"name_or_surname_most_frequency\", \"frequency\"])\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 488,
   "metadata": {},
   "outputs": [],
   "source": [
    "labels=df.name_or_surname_most_frequency\n",
    "x=np.arange(len(labels))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 491,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig,ax=plt.subplots(figsize=(12,7))\n",
    "sns.barplot(x=\"name_or_surname_most_frequency\", y=\"frequency\", data=df)\n",
    "ax.set_ylabel(\"frequency\")\n",
    "ax.set_xlabel(\"name_or_surname_most_frequency\")\n",
    "ax.set_xticks(x)\n",
    "ax.set_xticklabels(labels, rotation=45)\n",
    "ax.set_title(\"Most Common 15 Name or Surname\")\n",
    "\n",
    "for p in ax.patches:\n",
    "    ax.annotate((p.get_height()), (p.get_x()+0.2, p.get_height()+0.5));"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 393,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax=plt.subplots(figsize=(12,7))\n",
    "sns.barplot(x=df.name_or_surname_most_frequency, y=df.frequency, ax=ax)\n",
    "ax.set_title(\"Most Common 15 Name or Surname\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 3. Killed People According to Races (Pie Chart)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 394,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>date</th>\n",
       "      <th>manner_of_death</th>\n",
       "      <th>armed</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>race</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>signs_of_mental_illness</th>\n",
       "      <th>threat_level</th>\n",
       "      <th>flee</th>\n",
       "      <th>body_camera</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>Tim Elliot</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>53.0</td>\n",
       "      <td>M</td>\n",
       "      <td>A</td>\n",
       "      <td>Shelton</td>\n",
       "      <td>WA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>Lewis Lee Lembke</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>47.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>Aloha</td>\n",
       "      <td>OR</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>John Paul Quintero</td>\n",
       "      <td>03/01/15</td>\n",
       "      <td>shot and Tasered</td>\n",
       "      <td>unarmed</td>\n",
       "      <td>23.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Wichita</td>\n",
       "      <td>KS</td>\n",
       "      <td>False</td>\n",
       "      <td>other</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "      <td>Matthew Hoffman</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>toy weapon</td>\n",
       "      <td>32.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9</td>\n",
       "      <td>Michael Rodriguez</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>nail gun</td>\n",
       "      <td>39.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Evans</td>\n",
       "      <td>CO</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id                name      date   manner_of_death       armed   age  \\\n",
       "0   3          Tim Elliot  02/01/15              shot         gun  53.0   \n",
       "1   4    Lewis Lee Lembke  02/01/15              shot         gun  47.0   \n",
       "2   5  John Paul Quintero  03/01/15  shot and Tasered     unarmed  23.0   \n",
       "3   8     Matthew Hoffman  04/01/15              shot  toy weapon  32.0   \n",
       "4   9   Michael Rodriguez  04/01/15              shot    nail gun  39.0   \n",
       "\n",
       "  gender race           city state  signs_of_mental_illness threat_level  \\\n",
       "0      M    A        Shelton    WA                     True       attack   \n",
       "1      M    W          Aloha    OR                    False       attack   \n",
       "2      M    H        Wichita    KS                    False        other   \n",
       "3      M    W  San Francisco    CA                     True       attack   \n",
       "4      M    H          Evans    CO                    False       attack   \n",
       "\n",
       "          flee  body_camera  \n",
       "0  Not fleeing        False  \n",
       "1  Not fleeing        False  \n",
       "2  Not fleeing        False  \n",
       "3  Not fleeing        False  \n",
       "4  Not fleeing        False  "
      ]
     },
     "execution_count": 394,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 395,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['A', 'W', 'H', 'B', 'O', nan, 'N'], dtype=object)"
      ]
     },
     "execution_count": 395,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.race.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 396,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "W    1201\n",
       "B     618\n",
       "H     423\n",
       "A      39\n",
       "N      31\n",
       "O      28\n",
       "Name: race, dtype: int64"
      ]
     },
     "execution_count": 396,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.race.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 397,
   "metadata": {},
   "outputs": [],
   "source": [
    "kill.dropna(subset=[\"race\"], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 398,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2340, 14)"
      ]
     },
     "execution_count": 398,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 399,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['A', 'W', 'H', 'B', 'O', 'N'], dtype=object)"
      ]
     },
     "execution_count": 399,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.race.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 400,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "W    1201\n",
       "B     618\n",
       "H     423\n",
       "A      39\n",
       "N      31\n",
       "O      28\n",
       "Name: race, dtype: int64"
      ]
     },
     "execution_count": 400,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.race.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 401,
   "metadata": {},
   "outputs": [],
   "source": [
    "labels=kill.race.value_counts().index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 402,
   "metadata": {},
   "outputs": [],
   "source": [
    "sizes=kill.race.value_counts().values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 425,
   "metadata": {},
   "outputs": [],
   "source": [
    "myexplode=(0.2,0,0.1,0.1,0.1,0.1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 427,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x792 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig,ax=plt.subplots(figsize=(15,11))\n",
    "ax.pie(sizes, labels=labels, autopct=\"%1.2f%%\", explode=myexplode, startangle=30);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 4a.Box plot of age in both genders separeted by manner of death."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 404,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>date</th>\n",
       "      <th>manner_of_death</th>\n",
       "      <th>armed</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>race</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>signs_of_mental_illness</th>\n",
       "      <th>threat_level</th>\n",
       "      <th>flee</th>\n",
       "      <th>body_camera</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>Tim Elliot</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>53.0</td>\n",
       "      <td>M</td>\n",
       "      <td>A</td>\n",
       "      <td>Shelton</td>\n",
       "      <td>WA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>Lewis Lee Lembke</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>47.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>Aloha</td>\n",
       "      <td>OR</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>John Paul Quintero</td>\n",
       "      <td>03/01/15</td>\n",
       "      <td>shot and Tasered</td>\n",
       "      <td>unarmed</td>\n",
       "      <td>23.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Wichita</td>\n",
       "      <td>KS</td>\n",
       "      <td>False</td>\n",
       "      <td>other</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "      <td>Matthew Hoffman</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>toy weapon</td>\n",
       "      <td>32.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9</td>\n",
       "      <td>Michael Rodriguez</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>nail gun</td>\n",
       "      <td>39.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Evans</td>\n",
       "      <td>CO</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id                name      date   manner_of_death       armed   age  \\\n",
       "0   3          Tim Elliot  02/01/15              shot         gun  53.0   \n",
       "1   4    Lewis Lee Lembke  02/01/15              shot         gun  47.0   \n",
       "2   5  John Paul Quintero  03/01/15  shot and Tasered     unarmed  23.0   \n",
       "3   8     Matthew Hoffman  04/01/15              shot  toy weapon  32.0   \n",
       "4   9   Michael Rodriguez  04/01/15              shot    nail gun  39.0   \n",
       "\n",
       "  gender race           city state  signs_of_mental_illness threat_level  \\\n",
       "0      M    A        Shelton    WA                     True       attack   \n",
       "1      M    W          Aloha    OR                    False       attack   \n",
       "2      M    H        Wichita    KS                    False        other   \n",
       "3      M    W  San Francisco    CA                     True       attack   \n",
       "4      M    H          Evans    CO                    False       attack   \n",
       "\n",
       "          flee  body_camera  \n",
       "0  Not fleeing        False  \n",
       "1  Not fleeing        False  \n",
       "2  Not fleeing        False  \n",
       "3  Not fleeing        False  \n",
       "4  Not fleeing        False  "
      ]
     },
     "execution_count": 404,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 405,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['shot', 'shot and Tasered'], dtype=object)"
      ]
     },
     "execution_count": 405,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.manner_of_death.unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# INSTRUCTION: Demonstrate the Quartiles of age in both genders separeted by manner of death."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 406,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig,ax = plt.subplots(figsize=(10,7))\n",
    "sns.boxplot(x=\"gender\", y=\"age\", hue=\"manner_of_death\", data=kill);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 4b. Swarm Plot (Do not use in large datasets. The memory will not be enogh!)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 407,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(10,6))\n",
    "sns.swarmplot(x=\"gender\", y=\"age\", hue=\"manner_of_death\", data=kill);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 5. Kill properties (Count Plots)\n",
    "# INSTRUCTION-1: Plot number of people by gender"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 408,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>date</th>\n",
       "      <th>manner_of_death</th>\n",
       "      <th>armed</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>race</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>signs_of_mental_illness</th>\n",
       "      <th>threat_level</th>\n",
       "      <th>flee</th>\n",
       "      <th>body_camera</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>Tim Elliot</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>53.0</td>\n",
       "      <td>M</td>\n",
       "      <td>A</td>\n",
       "      <td>Shelton</td>\n",
       "      <td>WA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>Lewis Lee Lembke</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>47.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>Aloha</td>\n",
       "      <td>OR</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>John Paul Quintero</td>\n",
       "      <td>03/01/15</td>\n",
       "      <td>shot and Tasered</td>\n",
       "      <td>unarmed</td>\n",
       "      <td>23.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Wichita</td>\n",
       "      <td>KS</td>\n",
       "      <td>False</td>\n",
       "      <td>other</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "      <td>Matthew Hoffman</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>toy weapon</td>\n",
       "      <td>32.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9</td>\n",
       "      <td>Michael Rodriguez</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>nail gun</td>\n",
       "      <td>39.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Evans</td>\n",
       "      <td>CO</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id                name      date   manner_of_death       armed   age  \\\n",
       "0   3          Tim Elliot  02/01/15              shot         gun  53.0   \n",
       "1   4    Lewis Lee Lembke  02/01/15              shot         gun  47.0   \n",
       "2   5  John Paul Quintero  03/01/15  shot and Tasered     unarmed  23.0   \n",
       "3   8     Matthew Hoffman  04/01/15              shot  toy weapon  32.0   \n",
       "4   9   Michael Rodriguez  04/01/15              shot    nail gun  39.0   \n",
       "\n",
       "  gender race           city state  signs_of_mental_illness threat_level  \\\n",
       "0      M    A        Shelton    WA                     True       attack   \n",
       "1      M    W          Aloha    OR                    False       attack   \n",
       "2      M    H        Wichita    KS                    False        other   \n",
       "3      M    W  San Francisco    CA                     True       attack   \n",
       "4      M    H          Evans    CO                    False       attack   \n",
       "\n",
       "          flee  body_camera  \n",
       "0  Not fleeing        False  \n",
       "1  Not fleeing        False  \n",
       "2  Not fleeing        False  \n",
       "3  Not fleeing        False  \n",
       "4  Not fleeing        False  "
      ]
     },
     "execution_count": 408,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 409,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig,ax = plt.subplots()\n",
    "sns.countplot(x=\"gender\", data=kill)\n",
    "ax.set_title(\"Gender\", color=\"b\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# INSTRUCTION-2: Plot 7 most common kill weapons"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 294,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['gun', 'unarmed', 'toy weapon', 'nail gun', 'knife', 'vehicle',\n",
       "       'shovel', 'hammer', 'hatchet', 'undetermined', 'sword', 'machete',\n",
       "       'box cutter', 'metal object', 'screwdriver', 'lawn mower blade',\n",
       "       'flagpole', 'guns and explosives', 'cordless drill', 'crossbow',\n",
       "       'metal pole', 'Taser', 'metal pipe', 'metal hand tool',\n",
       "       'blunt object', 'metal stick', 'sharp object', 'meat cleaver', nan,\n",
       "       'carjack', 'chain', \"contractor's level\", 'unknown weapon',\n",
       "       'stapler', 'beer bottle', 'bean-bag gun',\n",
       "       'baseball bat and fireplace poker', 'straight edge razor',\n",
       "       'gun and knife', 'ax', 'brick', 'baseball bat', 'hand torch',\n",
       "       'chain saw', 'garden tool', 'scissors', 'pole', 'pick-axe',\n",
       "       'flashlight', 'baton', 'spear', 'pitchfork', 'hatchet and gun',\n",
       "       'rock', 'piece of wood', 'bayonet', 'pipe', 'glass shard',\n",
       "       'motorcycle', 'metal rake', 'crowbar', 'oar', 'machete and gun',\n",
       "       'tire iron', 'air conditioner', 'pole and knife',\n",
       "       'baseball bat and bottle', 'fireworks', 'pen'], dtype=object)"
      ]
     },
     "execution_count": 294,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.armed.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 300,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['gun', 'knife', 'vehicle', 'unarmed', 'undetermined', 'toy weapon',\n",
       "       'unknown weapon'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 300,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c_armed=kill[\"armed\"].value_counts()[:7].index\n",
    "c_armed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 301,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1398,  373,  177,  171,  117,  104,   18], dtype=int64)"
      ]
     },
     "execution_count": 301,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d_armed=kill[\"armed\"].value_counts()[:7].values\n",
    "d_armed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 303,
   "metadata": {},
   "outputs": [],
   "source": [
    "labels=list(c_armed)\n",
    "x=np.arange(len(labels))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 305,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(8,5))\n",
    "sns.barplot(c_armed,d_armed)\n",
    "ax.set_xticks(x)\n",
    "ax.set_xticklabels(labels, rotation=45);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# INSTRUCTION-3: Plot number of age of killed people under two groups : Under 25 and Above 25"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 306,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>date</th>\n",
       "      <th>manner_of_death</th>\n",
       "      <th>armed</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>race</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>signs_of_mental_illness</th>\n",
       "      <th>threat_level</th>\n",
       "      <th>flee</th>\n",
       "      <th>body_camera</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>Tim Elliot</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>53.0</td>\n",
       "      <td>M</td>\n",
       "      <td>A</td>\n",
       "      <td>Shelton</td>\n",
       "      <td>WA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>Lewis Lee Lembke</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>47.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>Aloha</td>\n",
       "      <td>OR</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>John Paul Quintero</td>\n",
       "      <td>03/01/15</td>\n",
       "      <td>shot and Tasered</td>\n",
       "      <td>unarmed</td>\n",
       "      <td>23.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Wichita</td>\n",
       "      <td>KS</td>\n",
       "      <td>False</td>\n",
       "      <td>other</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "      <td>Matthew Hoffman</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>toy weapon</td>\n",
       "      <td>32.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9</td>\n",
       "      <td>Michael Rodriguez</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>nail gun</td>\n",
       "      <td>39.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Evans</td>\n",
       "      <td>CO</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id                name      date   manner_of_death       armed   age  \\\n",
       "0   3          Tim Elliot  02/01/15              shot         gun  53.0   \n",
       "1   4    Lewis Lee Lembke  02/01/15              shot         gun  47.0   \n",
       "2   5  John Paul Quintero  03/01/15  shot and Tasered     unarmed  23.0   \n",
       "3   8     Matthew Hoffman  04/01/15              shot  toy weapon  32.0   \n",
       "4   9   Michael Rodriguez  04/01/15              shot    nail gun  39.0   \n",
       "\n",
       "  gender race           city state  signs_of_mental_illness threat_level  \\\n",
       "0      M    A        Shelton    WA                     True       attack   \n",
       "1      M    W          Aloha    OR                    False       attack   \n",
       "2      M    H        Wichita    KS                    False        other   \n",
       "3      M    W  San Francisco    CA                     True       attack   \n",
       "4      M    H          Evans    CO                    False       attack   \n",
       "\n",
       "          flee  body_camera  \n",
       "0  Not fleeing        False  \n",
       "1  Not fleeing        False  \n",
       "2  Not fleeing        False  \n",
       "3  Not fleeing        False  \n",
       "4  Not fleeing        False  "
      ]
     },
     "execution_count": 306,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "kill.groupby([\"age\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 307,
   "metadata": {},
   "outputs": [],
   "source": [
    "kill[\"age_cat\"]=kill.age.apply(lambda x : \"above25\" if x >25 else \"below25\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 308,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       above25\n",
       "1       above25\n",
       "2       below25\n",
       "3       above25\n",
       "4       above25\n",
       "         ...   \n",
       "2530    above25\n",
       "2531    below25\n",
       "2532    above25\n",
       "2533    above25\n",
       "2534    above25\n",
       "Name: age_cat, Length: 2535, dtype: object"
      ]
     },
     "execution_count": 308,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill[\"age_cat\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 314,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>date</th>\n",
       "      <th>manner_of_death</th>\n",
       "      <th>armed</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>race</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>signs_of_mental_illness</th>\n",
       "      <th>threat_level</th>\n",
       "      <th>flee</th>\n",
       "      <th>body_camera</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_cat</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>above25</th>\n",
       "      <td>1905</td>\n",
       "      <td>1905</td>\n",
       "      <td>1905</td>\n",
       "      <td>1905</td>\n",
       "      <td>1897</td>\n",
       "      <td>1905</td>\n",
       "      <td>1905</td>\n",
       "      <td>1779</td>\n",
       "      <td>1905</td>\n",
       "      <td>1905</td>\n",
       "      <td>1905</td>\n",
       "      <td>1905</td>\n",
       "      <td>1861</td>\n",
       "      <td>1905</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>below25</th>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>629</td>\n",
       "      <td>553</td>\n",
       "      <td>630</td>\n",
       "      <td>561</td>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>609</td>\n",
       "      <td>630</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           id  name  date  manner_of_death  armed   age  gender  race  city  \\\n",
       "age_cat                                                                       \n",
       "above25  1905  1905  1905             1905   1897  1905    1905  1779  1905   \n",
       "below25   630   630   630              630    629   553     630   561   630   \n",
       "\n",
       "         state  signs_of_mental_illness  threat_level  flee  body_camera  \n",
       "age_cat                                                                   \n",
       "above25   1905                     1905          1905  1861         1905  \n",
       "below25    630                      630           630   609          630  "
      ]
     },
     "execution_count": 314,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.groupby(kill[\"age_cat\"]).count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 335,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>date</th>\n",
       "      <th>manner_of_death</th>\n",
       "      <th>armed</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>race</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>signs_of_mental_illness</th>\n",
       "      <th>threat_level</th>\n",
       "      <th>flee</th>\n",
       "      <th>body_camera</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_cat</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>above25</th>\n",
       "      <td>1905</td>\n",
       "      <td>1905</td>\n",
       "      <td>1905</td>\n",
       "      <td>1905</td>\n",
       "      <td>1897</td>\n",
       "      <td>1905</td>\n",
       "      <td>1905</td>\n",
       "      <td>1779</td>\n",
       "      <td>1905</td>\n",
       "      <td>1905</td>\n",
       "      <td>1905</td>\n",
       "      <td>1905</td>\n",
       "      <td>1861</td>\n",
       "      <td>1905</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>below25</th>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>629</td>\n",
       "      <td>553</td>\n",
       "      <td>630</td>\n",
       "      <td>561</td>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>609</td>\n",
       "      <td>630</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           id  name  date  manner_of_death  armed   age  gender  race  city  \\\n",
       "age_cat                                                                       \n",
       "above25  1905  1905  1905             1905   1897  1905    1905  1779  1905   \n",
       "below25   630   630   630              630    629   553     630   561   630   \n",
       "\n",
       "         state  signs_of_mental_illness  threat_level  flee  body_camera  \n",
       "age_cat                                                                   \n",
       "above25   1905                     1905          1905  1861         1905  \n",
       "below25    630                      630           630   609          630  "
      ]
     },
     "execution_count": 335,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ast=kill.groupby([\"age_cat\"]).count()\n",
    "ast"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 338,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x=kill[\"age_cat\"], data=kill);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# INSTRUCTION-4: Plot number of killed poeple by race"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 339,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>date</th>\n",
       "      <th>manner_of_death</th>\n",
       "      <th>armed</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>race</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>signs_of_mental_illness</th>\n",
       "      <th>threat_level</th>\n",
       "      <th>flee</th>\n",
       "      <th>body_camera</th>\n",
       "      <th>age_cat</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>Tim Elliot</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>53.0</td>\n",
       "      <td>M</td>\n",
       "      <td>A</td>\n",
       "      <td>Shelton</td>\n",
       "      <td>WA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "      <td>above25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>Lewis Lee Lembke</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>47.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>Aloha</td>\n",
       "      <td>OR</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "      <td>above25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>John Paul Quintero</td>\n",
       "      <td>03/01/15</td>\n",
       "      <td>shot and Tasered</td>\n",
       "      <td>unarmed</td>\n",
       "      <td>23.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Wichita</td>\n",
       "      <td>KS</td>\n",
       "      <td>False</td>\n",
       "      <td>other</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "      <td>below25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "      <td>Matthew Hoffman</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>toy weapon</td>\n",
       "      <td>32.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "      <td>above25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9</td>\n",
       "      <td>Michael Rodriguez</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>nail gun</td>\n",
       "      <td>39.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Evans</td>\n",
       "      <td>CO</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "      <td>above25</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id                name      date   manner_of_death       armed   age  \\\n",
       "0   3          Tim Elliot  02/01/15              shot         gun  53.0   \n",
       "1   4    Lewis Lee Lembke  02/01/15              shot         gun  47.0   \n",
       "2   5  John Paul Quintero  03/01/15  shot and Tasered     unarmed  23.0   \n",
       "3   8     Matthew Hoffman  04/01/15              shot  toy weapon  32.0   \n",
       "4   9   Michael Rodriguez  04/01/15              shot    nail gun  39.0   \n",
       "\n",
       "  gender race           city state  signs_of_mental_illness threat_level  \\\n",
       "0      M    A        Shelton    WA                     True       attack   \n",
       "1      M    W          Aloha    OR                    False       attack   \n",
       "2      M    H        Wichita    KS                    False        other   \n",
       "3      M    W  San Francisco    CA                     True       attack   \n",
       "4      M    H          Evans    CO                    False       attack   \n",
       "\n",
       "          flee  body_camera  age_cat  \n",
       "0  Not fleeing        False  above25  \n",
       "1  Not fleeing        False  above25  \n",
       "2  Not fleeing        False  below25  \n",
       "3  Not fleeing        False  above25  \n",
       "4  Not fleeing        False  above25  "
      ]
     },
     "execution_count": 339,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 340,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    A\n",
       "1    W\n",
       "2    H\n",
       "3    W\n",
       "4    H\n",
       "Name: race, dtype: object"
      ]
     },
     "execution_count": 340,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill[\"race\"].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 342,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>date</th>\n",
       "      <th>manner_of_death</th>\n",
       "      <th>armed</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>signs_of_mental_illness</th>\n",
       "      <th>threat_level</th>\n",
       "      <th>flee</th>\n",
       "      <th>body_camera</th>\n",
       "      <th>age_cat</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>race</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>A</th>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>38</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "      <td>37</td>\n",
       "      <td>39</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>B</th>\n",
       "      <td>618</td>\n",
       "      <td>618</td>\n",
       "      <td>618</td>\n",
       "      <td>618</td>\n",
       "      <td>614</td>\n",
       "      <td>609</td>\n",
       "      <td>618</td>\n",
       "      <td>618</td>\n",
       "      <td>618</td>\n",
       "      <td>618</td>\n",
       "      <td>618</td>\n",
       "      <td>605</td>\n",
       "      <td>618</td>\n",
       "      <td>618</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>H</th>\n",
       "      <td>423</td>\n",
       "      <td>423</td>\n",
       "      <td>423</td>\n",
       "      <td>423</td>\n",
       "      <td>422</td>\n",
       "      <td>413</td>\n",
       "      <td>423</td>\n",
       "      <td>423</td>\n",
       "      <td>423</td>\n",
       "      <td>423</td>\n",
       "      <td>423</td>\n",
       "      <td>411</td>\n",
       "      <td>423</td>\n",
       "      <td>423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>N</th>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>29</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>O</th>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>W</th>\n",
       "      <td>1201</td>\n",
       "      <td>1201</td>\n",
       "      <td>1201</td>\n",
       "      <td>1201</td>\n",
       "      <td>1200</td>\n",
       "      <td>1192</td>\n",
       "      <td>1201</td>\n",
       "      <td>1201</td>\n",
       "      <td>1201</td>\n",
       "      <td>1201</td>\n",
       "      <td>1201</td>\n",
       "      <td>1178</td>\n",
       "      <td>1201</td>\n",
       "      <td>1201</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        id  name  date  manner_of_death  armed   age  gender  city  state  \\\n",
       "race                                                                        \n",
       "A       39    39    39               39     39    38      39    39     39   \n",
       "B      618   618   618              618    614   609     618   618    618   \n",
       "H      423   423   423              423    422   413     423   423    423   \n",
       "N       31    31    31               31     31    31      31    31     31   \n",
       "O       28    28    28               28     28    28      28    28     28   \n",
       "W     1201  1201  1201             1201   1200  1192    1201  1201   1201   \n",
       "\n",
       "      signs_of_mental_illness  threat_level  flee  body_camera  age_cat  \n",
       "race                                                                     \n",
       "A                          39            39    37           39       39  \n",
       "B                         618           618   605          618      618  \n",
       "H                         423           423   411          423      423  \n",
       "N                          31            31    29           31       31  \n",
       "O                          28            28    28           28       28  \n",
       "W                        1201          1201  1178         1201     1201  "
      ]
     },
     "execution_count": 342,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.groupby(\"race\").count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 438,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,6))\n",
    "sns.countplot(x=kill[\"race\"], data=kill)\n",
    "plt.title(\"Race of killed people\", color=\"b\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 439,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,6))\n",
    "sns.countplot(x=kill[\"race\"], order=kill.groupby(\"race\").race.count().sort_values(ascending=False).index, data=kill)\n",
    "plt.title(\"Race of killed people\", color=\"b\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# INSTRUCTION-5: Plot 12 most dangerous cities"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 440,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>date</th>\n",
       "      <th>manner_of_death</th>\n",
       "      <th>armed</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>race</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>signs_of_mental_illness</th>\n",
       "      <th>threat_level</th>\n",
       "      <th>flee</th>\n",
       "      <th>body_camera</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>Tim Elliot</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>53.0</td>\n",
       "      <td>M</td>\n",
       "      <td>A</td>\n",
       "      <td>Shelton</td>\n",
       "      <td>WA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>Lewis Lee Lembke</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>47.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>Aloha</td>\n",
       "      <td>OR</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>John Paul Quintero</td>\n",
       "      <td>03/01/15</td>\n",
       "      <td>shot and Tasered</td>\n",
       "      <td>unarmed</td>\n",
       "      <td>23.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Wichita</td>\n",
       "      <td>KS</td>\n",
       "      <td>False</td>\n",
       "      <td>other</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "      <td>Matthew Hoffman</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>toy weapon</td>\n",
       "      <td>32.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9</td>\n",
       "      <td>Michael Rodriguez</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>nail gun</td>\n",
       "      <td>39.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Evans</td>\n",
       "      <td>CO</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id                name      date   manner_of_death       armed   age  \\\n",
       "0   3          Tim Elliot  02/01/15              shot         gun  53.0   \n",
       "1   4    Lewis Lee Lembke  02/01/15              shot         gun  47.0   \n",
       "2   5  John Paul Quintero  03/01/15  shot and Tasered     unarmed  23.0   \n",
       "3   8     Matthew Hoffman  04/01/15              shot  toy weapon  32.0   \n",
       "4   9   Michael Rodriguez  04/01/15              shot    nail gun  39.0   \n",
       "\n",
       "  gender race           city state  signs_of_mental_illness threat_level  \\\n",
       "0      M    A        Shelton    WA                     True       attack   \n",
       "1      M    W          Aloha    OR                    False       attack   \n",
       "2      M    H        Wichita    KS                    False        other   \n",
       "3      M    W  San Francisco    CA                     True       attack   \n",
       "4      M    H          Evans    CO                    False       attack   \n",
       "\n",
       "          flee  body_camera  \n",
       "0  Not fleeing        False  \n",
       "1  Not fleeing        False  \n",
       "2  Not fleeing        False  \n",
       "3  Not fleeing        False  \n",
       "4  Not fleeing        False  "
      ]
     },
     "execution_count": 440,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 444,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "city\n",
       "Los Angeles          36\n",
       "Phoenix              28\n",
       "Houston              26\n",
       "Chicago              24\n",
       "Columbus             18\n",
       "                     ..\n",
       "Lizella               1\n",
       "Livingston Parish     1\n",
       "Livingston            1\n",
       "Little Mountain       1\n",
       "Abbeville             1\n",
       "Name: city, Length: 1320, dtype: int64"
      ]
     },
     "execution_count": 444,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "city_group=kill.groupby(\"city\").city.count().sort_values(ascending=False)\n",
    "city_group"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 460,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "(kill.groupby(\"city\").city.count().sort_values(ascending=False)[:15]).plot.bar(title=\"Most Dangerous Cities\", figsize=(12,7), rot=45);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#  INSTRUCTION-6: Plot 20 most dangerous states"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 462,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "(kill.groupby(\"state\").state.count().sort_values(ascending=False)[:20]).plot.bar(title=\"Most Dangerous States\", figsize=(12,7), rot=45);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# INSTRUCTION-7: Plot Having mental ilness or not for killed people"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 458,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>date</th>\n",
       "      <th>manner_of_death</th>\n",
       "      <th>armed</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>race</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>signs_of_mental_illness</th>\n",
       "      <th>threat_level</th>\n",
       "      <th>flee</th>\n",
       "      <th>body_camera</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>Tim Elliot</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>53.0</td>\n",
       "      <td>M</td>\n",
       "      <td>A</td>\n",
       "      <td>Shelton</td>\n",
       "      <td>WA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>Lewis Lee Lembke</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>47.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>Aloha</td>\n",
       "      <td>OR</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>John Paul Quintero</td>\n",
       "      <td>03/01/15</td>\n",
       "      <td>shot and Tasered</td>\n",
       "      <td>unarmed</td>\n",
       "      <td>23.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Wichita</td>\n",
       "      <td>KS</td>\n",
       "      <td>False</td>\n",
       "      <td>other</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "      <td>Matthew Hoffman</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>toy weapon</td>\n",
       "      <td>32.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9</td>\n",
       "      <td>Michael Rodriguez</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>nail gun</td>\n",
       "      <td>39.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Evans</td>\n",
       "      <td>CO</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id                name      date   manner_of_death       armed   age  \\\n",
       "0   3          Tim Elliot  02/01/15              shot         gun  53.0   \n",
       "1   4    Lewis Lee Lembke  02/01/15              shot         gun  47.0   \n",
       "2   5  John Paul Quintero  03/01/15  shot and Tasered     unarmed  23.0   \n",
       "3   8     Matthew Hoffman  04/01/15              shot  toy weapon  32.0   \n",
       "4   9   Michael Rodriguez  04/01/15              shot    nail gun  39.0   \n",
       "\n",
       "  gender race           city state  signs_of_mental_illness threat_level  \\\n",
       "0      M    A        Shelton    WA                     True       attack   \n",
       "1      M    W          Aloha    OR                    False       attack   \n",
       "2      M    H        Wichita    KS                    False        other   \n",
       "3      M    W  San Francisco    CA                     True       attack   \n",
       "4      M    H          Evans    CO                    False       attack   \n",
       "\n",
       "          flee  body_camera  \n",
       "0  Not fleeing        False  \n",
       "1  Not fleeing        False  \n",
       "2  Not fleeing        False  \n",
       "3  Not fleeing        False  \n",
       "4  Not fleeing        False  "
      ]
     },
     "execution_count": 458,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 470,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "(kill.groupby(\"signs_of_mental_illness\").signs_of_mental_illness.count().sort_values(ascending=False)[:20]).plot.bar(title=\"Having Mental illness or not for killed people\", figsize=(12,7), rot=0, color=[\"blue\", \"orange\"]);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# INSTRUCTION-8: Plot number of Threat Types"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 468,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "(kill.groupby(\"threat_level\").threat_level.count().sort_values(ascending=False)).plot.bar(title=\"Number of Threat Types\", figsize=(12,7), rot=0, color=[\"blue\", \"orange\", \"green\"]);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# INSTRUCTION-9: Plot number of Flee Types"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 471,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>date</th>\n",
       "      <th>manner_of_death</th>\n",
       "      <th>armed</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>race</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>signs_of_mental_illness</th>\n",
       "      <th>threat_level</th>\n",
       "      <th>flee</th>\n",
       "      <th>body_camera</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>Tim Elliot</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>53.0</td>\n",
       "      <td>M</td>\n",
       "      <td>A</td>\n",
       "      <td>Shelton</td>\n",
       "      <td>WA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>Lewis Lee Lembke</td>\n",
       "      <td>02/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>gun</td>\n",
       "      <td>47.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>Aloha</td>\n",
       "      <td>OR</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>John Paul Quintero</td>\n",
       "      <td>03/01/15</td>\n",
       "      <td>shot and Tasered</td>\n",
       "      <td>unarmed</td>\n",
       "      <td>23.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Wichita</td>\n",
       "      <td>KS</td>\n",
       "      <td>False</td>\n",
       "      <td>other</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "      <td>Matthew Hoffman</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>toy weapon</td>\n",
       "      <td>32.0</td>\n",
       "      <td>M</td>\n",
       "      <td>W</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>True</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9</td>\n",
       "      <td>Michael Rodriguez</td>\n",
       "      <td>04/01/15</td>\n",
       "      <td>shot</td>\n",
       "      <td>nail gun</td>\n",
       "      <td>39.0</td>\n",
       "      <td>M</td>\n",
       "      <td>H</td>\n",
       "      <td>Evans</td>\n",
       "      <td>CO</td>\n",
       "      <td>False</td>\n",
       "      <td>attack</td>\n",
       "      <td>Not fleeing</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id                name      date   manner_of_death       armed   age  \\\n",
       "0   3          Tim Elliot  02/01/15              shot         gun  53.0   \n",
       "1   4    Lewis Lee Lembke  02/01/15              shot         gun  47.0   \n",
       "2   5  John Paul Quintero  03/01/15  shot and Tasered     unarmed  23.0   \n",
       "3   8     Matthew Hoffman  04/01/15              shot  toy weapon  32.0   \n",
       "4   9   Michael Rodriguez  04/01/15              shot    nail gun  39.0   \n",
       "\n",
       "  gender race           city state  signs_of_mental_illness threat_level  \\\n",
       "0      M    A        Shelton    WA                     True       attack   \n",
       "1      M    W          Aloha    OR                    False       attack   \n",
       "2      M    H        Wichita    KS                    False        other   \n",
       "3      M    W  San Francisco    CA                     True       attack   \n",
       "4      M    H          Evans    CO                    False       attack   \n",
       "\n",
       "          flee  body_camera  \n",
       "0  Not fleeing        False  \n",
       "1  Not fleeing        False  \n",
       "2  Not fleeing        False  \n",
       "3  Not fleeing        False  \n",
       "4  Not fleeing        False  "
      ]
     },
     "execution_count": 471,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kill.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 472,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "(kill.groupby(\"flee\").flee.count().sort_values(ascending=False)).plot.bar(title=\"Number of Flee Types\", figsize=(12,7), rot=0, color=[\"blue\", \"orange\", \"green\", \"red\"]);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
